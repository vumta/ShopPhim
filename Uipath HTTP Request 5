D∆∞·ªõi ƒë√¢y l√† h∆∞·ªõng d·∫´n **step-by-step** c√°ch c·∫≠p nh·∫≠t bi·∫øn `AllFiles` trong Power Automate ƒë·ªÉ **ƒë·∫£m b·∫£o kh√¥ng b·ªã tr√πng l·∫∑p d·ªØ li·ªáu**, s·ª≠ d·ª•ng logic chu·∫©n:

---

## üéØ M·ª•c ti√™u:
T·∫°o v√† duy tr√¨ m·ªôt bi·∫øn `AllFiles` d·∫°ng m·∫£ng, m·ªói l·∫ßn Flow con ƒë∆∞·ª£c g·ªçi s·∫Ω:

- **Reset AllFiles** v·ªÅ r·ªóng.
- **Append t·ª´ng file** v√†o m·∫£ng.
- **ƒê·∫£m b·∫£o kh√¥ng tr√πng l·∫∑p.**
- **Tr·∫£ v·ªÅ m·∫£ng `AllFiles` chu·∫©n** v·ªÅ Flow cha.

---

## ‚úÖ Step-by-step chi ti·∫øt

---

### üîπ **B∆∞·ªõc 1 ‚Äì Kh·ªüi t·∫°o bi·∫øn `AllFiles`**

- **Action**: `Initialize variable`
- **Name**: `AllFiles`
- **Type**: Array
- **Value**: `[]`

üü° V·ªã tr√≠: ƒê·∫∑t ·ªü ƒë·∫ßu Flow con (sau c√°c input ƒë·∫ßu v√†o).

---

### üîπ **B∆∞·ªõc 2 ‚Äì Reset `AllFiles` m·ªói l·∫ßn ch·∫°y**

‚û°Ô∏è Th√™m ngay sau b∆∞·ªõc `Initialize variable`:

- **Action**: `Set variable`
- **Name**: `AllFiles`
- **Value**: `[]`

> ‚úÖ ƒê·∫£m b·∫£o bi·∫øn kh√¥ng b·ªã d√≠nh d·ªØ li·ªáu t·ª´ c√°c l·∫ßn ch·∫°y tr∆∞·ªõc.

---

### üîπ **B∆∞·ªõc 3 ‚Äì Duy·ªát qua t·ª´ng file ƒë·ªÉ Append**

‚û°Ô∏è Gi·∫£ s·ª≠ b·∫°n c√≥ m·∫£ng `Files` t·ª´ Parse JSON ho·∫∑c HTTP:

1. **Action**: `Apply to each`
   - **Input**: `Files`

2. B√™n trong v√≤ng l·∫∑p:

- **Action**: `Append to array variable`
  - **Name**: `AllFiles`
  - **Value**:

```json
{
  "Name": "@items('Apply_to_each')?['Name']",
  "Path": "@items('Apply_to_each')?['ServerRelativeUrl']"
}
```

---

### üîπ **B∆∞·ªõc 4 ‚Äì (T√πy ch·ªçn) Lo·∫°i b·ªè tr√πng l·∫∑p**

> N·∫øu b·∫°n th·∫•y c√≥ kh·∫£ nƒÉng d·ªØ li·ªáu b·ªã tr√πng, th√™m m·ªôt b∆∞·ªõc x·ª≠ l√Ω:

- **Action**: `Set variable`
  - **Name**: `AllFiles`
  - **Value** (Expression):

```plaintext
union(variables('AllFiles'), variables('AllFiles'))
```

> ‚ö†Ô∏è `union()` gi·ªØa ch√≠nh n√≥ s·∫Ω lo·∫°i object tr√πng nhau.

---

### üîπ **B∆∞·ªõc 5 ‚Äì Return `AllFiles` v·ªÅ Flow cha**

- **Action**: `Respond to a PowerApp or flow`
- **Output**:
  - **Type**: Array
  - **Name**: `AllFiles`
  - **Value**: `variables('AllFiles')`

---

## üß™ Flow cha c√≥ th·ªÉ d√πng tr·ª±c ti·∫øp:

- G·ªçi Child Flow ‚Üí output:
```plaintext
outputs('Child_Flow')?['AllFiles']
```

Ho·∫∑c g√°n qua Parse JSON:

```json
{
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "Name": { "type": "string" },
      "Path": { "type": "string" }
    }
  }
}
```

---

## ‚úÖ K·∫øt qu·∫£ ƒë·∫°t ƒë∆∞·ª£c:

| M·ª•c ti√™u                         | ƒê√£ x·ª≠ l√Ω b·∫±ng                         |
|----------------------------------|----------------------------------------|
| Reset d·ªØ li·ªáu AllFiles           | `Set variable('AllFiles', [])`         |
| Duy·ªát v√† append file             | `Apply to each` + `Append to array`    |
| Tr√°nh tr√πng d·ªØ li·ªáu              | `union(AllFiles, AllFiles)`            |
| Tr·∫£ v·ªÅ ƒë√∫ng ki·ªÉu array of object| Output d·∫°ng **Array** v·ªõi object JSON |

---

N·∫øu b·∫°n c·∫ßn m√¨nh t·∫°o **file `.zip` cho Flow con m·∫´u n√†y** ƒë·ªÉ import nhanh, ch·ªâ c·∫ßn n√≥i nh√©!
