Cảm ơn bạn! Khi bạn dùng Invoke VBA trong UiPath, thì đối tượng ThisWorkbook sẽ không hoạt động đúng như trong Excel VBA Editor vì script không nằm trong chính file Excel đang mở.


---

Cách khắc phục: Dùng ActiveWorkbook thay cho ThisWorkbook

VBA sửa lại như sau:

Sub ClearColumns()
    Dim ws As Worksheet
    Set ws = ActiveWorkbook.Sheets("Sheet1")
    
    With ws
        .Range("A2:A" & .Cells(.Rows.Count, "A").End(xlUp).Row).ClearContents
        .Range("B2:B" & .Cells(.Rows.Count, "B").End(xlUp).Row).ClearContents
    End With
End Sub


---

Hướng dẫn sử dụng trong UiPath:

1. Tạo file .vbs hoặc .bas chứa đoạn code trên. Ví dụ đặt tên ClearColumns.vbs.


2. Trong UiPath:

Dùng activity Invoke VBA

Chọn file Excel

Trỏ đến file script ClearColumns.vbs

Tên macro: "ClearColumns"





---

Lưu ý:

Sheet "Sheet1" phải đúng tên. Nếu bạn muốn truyền tên sheet từ UiPath, mình có thể giúp sửa code để nhận tham số.

Invoke VBA chỉ chạy khi file Excel đang mở bằng Excel Application Scope và Visible = True.



---

Bạn có muốn mình viết thêm phiên bản có truyền tên sheet từ UiPath không?


Câu lỗi bạn gặp: 'Excel' is not a member of 'WorkbookApplication' trong UiPath Invoke Code — nghĩa là bạn đang gọi wb.Excel, nhưng WorkbookApplication không có thuộc tính Excel trong môi trường VB.NET mặc định của Invoke Code.


---

Nguyên nhân:

UiPath Invoke Code hoạt động theo chuẩn VB.NET, nhưng đối tượng WorkbookApplication là một class đặc biệt do UiPath cung cấp. Trong môi trường Invoke Code, bạn không thể gọi trực tiếp wb.Excel.Worksheets(...) như khi dùng Custom Activity hoặc trong PowerShell/VBA.


---

Cách giải quyết:

Cách 1: Không dùng Invoke Code để thao tác Excel COM object

Thay vào đó, bạn nên dùng "Read Range" > "For Each Row" > "Write Cell"/"Clear Range" để thao tác với Excel bằng activity UiPath.


---

Cách 2: Dùng Invoke VBA thay vì Invoke Code nếu bạn muốn thao tác Excel trực tiếp

Ví dụ VBA code để xóa dữ liệu cột A và B:

Sub ClearColumns()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Sheet1")
    
    ws.Range("A2:A" & ws.Cells(ws.Rows.Count, "A").End(xlUp).Row).ClearContents
    ws.Range("B2:B" & ws.Cells(ws.Rows.Count, "B").End(xlUp).Row).ClearContents
End Sub

Trong UiPath:

Dùng activity Invoke VBA

Gửi file .vbs hoặc .bas

Tham số truyền vào là tên sheet nếu cần



---

Cách 3: Dùng Interop trực tiếp (không khuyến nghị)

Trong Invoke Code, bạn có thể dùng Microsoft.Office.Interop.Excel nếu đã tham chiếu thư viện (khó, không phải mặc định trong UiPath). Cách này phức tạp và không phù hợp với đa số workflow.


---

Gợi ý:

Bạn muốn mình viết đoạn Invoke VBA mẫu đầy đủ và cách gọi từ UiPath không?
Hay bạn muốn làm luôn bằng activity UiPath (không code)?



Ok, bạn muốn dùng Invoke Code trong Excel Application Scope của UiPath để xoá dữ liệu trong cột A và cột B của Excel, đúng không?

Mình sẽ hướng dẫn chi tiết:


---

1. Biến cần truyền vào Invoke Code

wb (WorkbookApplication) — bạn lấy từ Excel Application Scope (Output: Workbook).

SheetName (String) — tên Sheet cần xoá dữ liệu.

(Optionally) LastRow (Int32) — số dòng tối đa nếu bạn muốn giới hạn.


2. Mã trong Invoke Code:

Dim ws As Object = wb.Excel.Worksheets(SheetName)

' Xác định dòng cuối nếu cần (ở đây mình giả định 1000 dòng, bạn có thể truyền vào biến LastRow nếu muốn tự động)
Dim lastRow As Integer = ws.Cells(ws.Rows.Count, "A").End(-4162).Row ' -4162 = xlUp

' Xóa toàn bộ dữ liệu từ A2 đến A & lastRow
ws.Range("A2:A" & lastRow).ClearContents

' Xóa toàn bộ dữ liệu từ B2 đến B & lastRow
ws.Range("B2:B" & lastRow).ClearContents


---

3. Notes quan trọng:

ClearContents sẽ xoá giá trị trong ô, không xoá ô hay format.

Nếu bạn muốn xoá cả ô (Shift các ô khác lên), cần dùng .Delete.

Nếu bạn chỉ muốn xoá từ A2, B2 xuống thôi (không xoá header dòng 1), đoạn code trên đã đúng.

Nếu bạn muốn xoá toàn bộ cột (kể cả header), thay vì từ A2, bạn dùng "A:A" và "B:B".


Ví dụ xoá toàn bộ cột:

ws.Range("A:A").ClearContents
ws.Range("B:B").ClearContents


---

4. Cách truyền biến trong Invoke Code:

Trong Invoke Code activity:

Arguments:

wb → Direction: In

SheetName → Direction: In

(Nếu cần) LastRow → Direction: In




---

Bạn muốn mình viết thêm phiên bản tự động xác định lastRow hoặc thêm điều kiện nào khác không?
Ví dụ: chỉ xoá nếu ô A2 có dữ liệu chẳng hạn? Muốn mình bổ sung luôn không?

