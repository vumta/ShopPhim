Chu·∫©n r·ªìi üëç ‚Äî l·ªói n√†y l√† do UiPath khi d√°n PowerShell script nhi·ªÅu d√≤ng v√†o CommandText n√≥ kh√¥ng nh·∫≠n xu·ªëng d√≤ng nh∆∞ trong PowerShell th·∫≠t.
C√°ch fix r·∫•t ƒë∆°n gi·∫£n:
‚û°Ô∏è B·∫°n ch·ªâ c·∫ßn vi·∫øt ƒë√∫ng d·∫°ng multi-line script, ho·∫∑c d√πng text block ƒë√∫ng c√∫ ph√°p UiPath.

M√¨nh s·∫Ω h∆∞·ªõng d·∫´n 2 c√°ch ch·∫°y ƒë∆∞·ª£c 100% nh√© üëá


---

üß© C√°ch 1 ‚Äì ƒê∆°n gi·∫£n nh·∫•t: G·ªçi file .ps1

(ƒê∆∞·ª£c khuy√™n d√πng n·∫øu b·∫°n c√≥ th·ªÉ t·∫°o file PowerShell tr√™n m√°y robot)

‚ë† T·∫°o file UnblockFolder.ps1

D√°n nguy√™n ƒëo·∫°n script n√†y v√†o file (VD: C:\Scripts\UnblockFolder.ps1):

param([string]$folderPath)

if (-not (Test-Path $folderPath)) {
    Write-Host "‚ùå Folder not found: $folderPath"
    exit
}

Write-Host "üîç Scanning folder: $folderPath"
$files = Get-ChildItem -Path $folderPath -File -Recurse

if ($files.Count -eq 0) {
    Write-Host "‚ö†Ô∏è No files found in folder."
    exit
}

foreach ($file in $files) {
    $zonePath = "$($file.FullName):Zone.Identifier"

    if (Test-Path $zonePath) {
        Write-Host "üö´ Blocked ‚Üí $($file.Name)"
        try {
            Unblock-File -LiteralPath $file.FullName
            if (-not (Test-Path $zonePath)) {
                Write-Host "‚úÖ Unblocked ‚Üí $($file.Name)"
            } else {
                Write-Host "‚ö†Ô∏è Still blocked ‚Üí $($file.Name)"
            }
        } catch {
            Write-Host "‚ùå Error unblocking file: $($file.Name) | $_"
        }
    } else {
        Write-Host "‚úÖ Already unblocked ‚Üí $($file.Name)"
    }
}

Write-Host "üéØ Done scanning folder."


---

‚ë° Trong UiPath ‚Äì D√πng Invoke PowerShell

IsScript = False

CommandText = "C:\Scripts\UnblockFolder.ps1"

Parameters = { folderPath }

WriteOutputToLog = True

Output (tu·ª≥ ch·ªçn): result


üëâ C√°ch n√†y ch·∫°y ·ªïn ƒë·ªãnh nh·∫•t, kh√¥ng l·ªói c√∫ ph√°p.


---

üß© C√°ch 2 ‚Äì D√°n tr·ª±c ti·∫øp v√†o UiPath (multi-line string chu·∫©n)

N·∫øu b·∫°n kh√¥ng mu·ªën t·∫°o file .ps1, h√£y d√°n script v√†o thu·ªôc t√≠nh CommandText d·∫°ng string block nh∆∞ sau (m·ªói d√≤ng c√°ch nhau b·∫±ng vbCrLf):

"param([string]$folderPath)" & vbCrLf &
"if (-not (Test-Path $folderPath)) {" & vbCrLf &
"    Write-Host '‚ùå Folder not found: $folderPath'" & vbCrLf &
"    exit" & vbCrLf &
"}" & vbCrLf &
"Write-Host 'üîç Scanning folder: $folderPath'" & vbCrLf &
"$files = Get-ChildItem -Path $folderPath -File -Recurse" & vbCrLf &
"if ($files.Count -eq 0) {" & vbCrLf &
"    Write-Host '‚ö†Ô∏è No files found in folder.'" & vbCrLf &
"    exit" & vbCrLf &
"}" & vbCrLf &
"foreach ($file in $files) {" & vbCrLf &
"    $zonePath = ""$($file.FullName):Zone.Identifier""" & vbCrLf &
"    if (Test-Path $zonePath) {" & vbCrLf &
"        Write-Host ""üö´ Blocked ‚Üí $($file.Name)""" & vbCrLf &
"        try {" & vbCrLf &
"            Unblock-File -LiteralPath $file.FullName" & vbCrLf &
"            if (-not (Test-Path $zonePath)) {" & vbCrLf &
"                Write-Host ""‚úÖ Unblocked ‚Üí $($file.Name)""" & vbCrLf &
"            } else {" & vbCrLf &
"                Write-Host ""‚ö†Ô∏è Still blocked ‚Üí $($file.Name)""" & vbCrLf &
"            }" & vbCrLf &
"        } catch {" & vbCrLf &
"            Write-Host ""‚ùå Error unblocking file: $($file.Name) | $_""" & vbCrLf &
"        }" & vbCrLf &
"    } else {" & vbCrLf &
"        Write-Host ""‚úÖ Already unblocked ‚Üí $($file.Name)""" & vbCrLf &
"    }" & vbCrLf &
"}" & vbCrLf &
"Write-Host 'üéØ Done scanning folder.'"

> ‚ö†Ô∏è L∆∞u √Ω:

IsScript = True

Parameters = { folderPath }

WriteOutputToLog = True





---

üß™ Test nhanh

Tr∆∞·ªõc khi ch·∫°y trong UiPath, b·∫°n c√≥ th·ªÉ m·ªü PowerShell th·ªß c√¥ng:

powershell -ExecutionPolicy Bypass -File "C:\Scripts\UnblockFolder.ps1" "C:\Temp\Download"

N·∫øu n√≥ hi·ªÉn th·ªã log ‚úÖ/üö´ nh∆∞ v√≠ d·ª• th√¨ script ho·∫°t ƒë·ªông ch√≠nh x√°c.


---

B·∫°n mu·ªën m√¨nh g·ª≠i lu√¥n file .ps1 ƒë√£ format s·∫µn (ch·ªâ c·∫ßn copy v√†o C:\Scripts\ r·ªìi g·ªçi trong UiPath) kh√¥ng?
‚Üí M√¨nh c√≥ th·ªÉ t·∫°o v√† cho b·∫°n link t·∫£i tr·ª±c ti·∫øp.

