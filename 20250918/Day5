Tuyệt — dưới đây mình giải thích rất chi tiết cho Ngày 5 — Dự án thực tế (phần 1) (6.5h). Mình sẽ đưa: mục tiêu, phân bổ thời gian, danh sách action-by-action (với tên action chính xác trong PAD và các tham số đề xuất), bảng biến mẫu, chiến lược xử lý lỗi & log, checklist kiểm thử, và mẹo tối ưu hiệu năng. Bạn có thể copy thẳng các bước này vào PAD để xây flow.

Ngày 5 — Dự án thực tế (phần 1)

Case study: Tự động tạo Báo cáo bán hàng bằng cách duyệt nhiều file Excel (SharePoint hoặc local), gộp dữ liệu, tính cột Total, ghi file tổng.

Thời lượng: ~6.5h

Phân tích & thiết kế: 0.5h

Build flow đọc & gộp file: 4.0h

Xử lý tính toán, ghi file, test ban đầu: 1.5h

Debug & sửa lỗi cơ bản: 0.5h



---

Mục tiêu cụ thể của buổi

Duyệt tất cả file .xlsx trong folder (hoặc đã tải từ SharePoint) → đọc sheet Sales.

Gộp dữ liệu vào masterDataTable chuẩn (columns: Date, Product, Qty, Price, Total).

Tính Total = Qty * Price (chuyển text→number nếu cần).

Ghi file kết quả Sales_Master.xlsx.

Có logging + skip file lỗi (flow không dừng vì 1 file bad).



---

Yêu cầu trước khi bắt tay làm

Power Automate Desktop đã cài.

Thư mục input (vd C:\PAD\Input) có nhiều file Excel mẫu với sheet Sales.

Quyền đọc/ghi file trên máy; nếu file ở SharePoint, tốt nhất: dùng Cloud Flow để download file về thư mục local trước khi chạy PAD (hoặc sync OneDrive).

Một file C:\PAD\Output để lưu báo cáo.



---

Biến mẫu (tên + loại + mô tả)

Tên biến	Loại	Mô tả

filesList	List	Kết quả Get files in folder
curFilePath	Text	Đường dẫn file đang xử lý
masterDT	DataTable	DataTable tổng để ghi ra Excel
curDT	DataTable	DataTable đọc từ file con
row	DataRow	Biến dùng trong For Each row in curDT
qtyText, priceText	Text	Giá trị ban đầu từ file (có thể là string)
qtyNum, priceNum, total	Number	Giá trị sau convert & tính toán
masterExcelPath	Text	C:\PAD\Output\Sales_Master.xlsx
logPath	Text	C:\PAD\Output\PAD_log.txt
errCount	Number	Đếm file lỗi



---

Flow outline — Action-by-action (chi tiết để bạn copy cấu hình)

> Note: mình dùng tên action chuẩn trong PAD (English names). Với các parameter mình ghi gợi ý giá trị — điều chỉnh theo đường dẫn/worksheet thực tế của bạn.



1. Set variable

masterExcelPath = C:\PAD\Output\Sales_Master.xlsx

logPath = C:\PAD\Output\PAD_log.txt

errCount = 0



2. Get files in folder

Folder: C:\PAD\Input

Pattern: *.xlsx

Include subfolders: (true/false tùy yêu cầu)

Output: filesList (List)



3. Create new data table (masterDT)

Columns: Date (Text), Product (Text), Qty (Number or Text), Price (Number or Text), Total (Number)

Output: masterDT



4. For Each curFilePath in filesList

Inside loop:


4.1 Begin error handling (Try) — dùng Begin/End Error Handling để catch lỗi file cụ thể

4.2 Launch Excel (or Attach if you prefer)
- Path: %curFilePath%
- Visible: False (tốt hơn cho hiệu năng)
- Output: curExcelInstance

4.3 Read from Excel worksheet
- ExcelInstance: %curExcelInstance%
- Worksheet: Sales (tên sheet)
- Range: blank / Used range
- First row as column names: True
- Output: curDT (DataTable)

4.4 If curDT.RowCount = 0
- Then: Write text to file (%logPath%) append: "[WARN] %curFilePath% has 0 rows at %FormatDateTime(Now(), 'yyyy-MM-dd HH:mm:ss')%" ; Close Excel (dont save) ; Continue loop
- Else: proceed

4.5 For Each row in curDT
- Get from row: qtyText = row["Qty"] ; priceText = row["Price"] ; dateVal = row["Date"] ; product = row["Product"]
- Convert text to number (action)
- Input: %qtyText% → Output: qtyNum (Number)
- (If convert fails — action may error; better wrap each convert with a quick check: If IsNumeric(qtyText) — but PAD may not have IsNumeric builtin; alternative: Try/ Catch around convert or use regex to remove thousands separators)
- Convert text to number for price → priceNum
- Set variable total = qtyNum * priceNum
- Insert row into data table (masterDT) values: [dateVal, product, qtyNum, priceNum, total]

4.6 Close Excel (curExcelInstance) — Save workbook = False

4.7 End error handling (Catch block)
- In Catch: Set variable errCount = errCount + 1
- Write text to file append: "[ERROR] %curFilePath% - %Error.Message% at %FormatDateTime(Now(), 'yyyy-MM-dd HH:mm:ss')%" → to %logPath%
- Optionally Take screenshot for debugging, Close Excel (ensure instance closed), Continue loop


5. After For Each loop: masterDT now chứa toàn bộ dữ liệu gộp


6. Optional: Remove header-rows duplicate

Nếu thấy các file con vô tình thêm header row vào curDT (do đọc không đúng), bạn có thể check: nếu masterDT first column value equals "Date" (header), remove that row. PAD has Remove rows or you can filter.



7. Sort / Aggregate (optional)

Nếu cần tính tổng theo product/date: dùng DataTable actions (Group/Filter) hoặc export -> use Excel formulas/pivot. (Nếu PAD không có group, bạn có thể ghi masterDT và xử lý trong Excel.)



8. Launch Excel (create master file)

If file exists: Launch Excel → open masterExcelPath else Launch Excel with new workbook.



9. Write to Excel worksheet

ExcelInstance: masterExcelInstance

DataTable: masterDT

Start cell: A1

Include headers: True



10. Save workbook & Close Excel (save = True)


11. Write text to file append: "[INFO] Completed merging %filesList.Count% files into %masterExcelPath% at %FormatDateTime(Now())%" → %logPath%


12. Display message (tùy chọn): show success + errCount




---

Chiến lược lỗi & recovery

Isolate file errors: bọc mỗi file trong Try/Catch (như ở trên) — lỗi file X chỉ log & skip, flow tiếp tục.

Lock file: nếu file locked by other process → Catch → retry N lần (delay 2s giữa retries) trước khi skip.

Convert fail (Qty/Price): nếu convert không được → log row + skip row (không dừng toàn bộ flow). Có thể lưu row lỗi vào ErrorRows.xlsx để xử lý tay.

Missing sheet: nếu Read from Excel worksheet lỗi vì sheet không tồn tại → Catch → log + skip file.

Check header mismatch: nếu column name khác (ví dụ Quantity thay cho Qty) → có 2 cách: (1) chuẩn hóa bằng file config mapping column names; (2) detect column names in curDT.Columns và map tương ứng.



---

Test plan & checklist (việc bạn phải làm khi test)

1. Chuẩn bị 5 file sample (mỗi file 5 rows) có Date, Product, Qty, Price. Chứa 1 file bị thiếu Price, 1 file có header lặp để test lỗi.


2. Run flow -> kiểm tra Sales_Master.xlsx có tổng số dòng = sum of data rows (skip rows lỗi).


3. Mở PAD_log.txt kiểm tra log warnings/errors xuất đúng file lỗi.


4. Test trường hợp file đang mở/locked -> flow không crash, file bị skip sau retry.


5. Test performance: dùng 100 files sample -> kiểm tra thời gian; nếu quá chậm, áp dụng tối ưu bên dưới.




---

Tối ưu hiệu năng (mẹo)

Không open/close Excel cho mỗi hàng: chỉ open file con → read whole sheet → close file con. Viết master 1 lần (ghi masterDT khi hoàn tất).

Disable Excel visibility (Visible = False) để nhanh hơn.

Nếu có nhiều file lớn: chạy theo batch (ví dụ 20 file 1 batch) hoặc xử lý song song bằng nhiều PAD flow (nâng cao).

Minimize UI automation: dùng Excel actions thay vì dùng UI recording cho Excel.



---

Mapping nhanh UiPath → PAD (cho bạn dễ hình dung)

UiPath Directory.GetFiles / For Each → PAD Get files in folder + For Each

UiPath Excel Application Scope + Read Range → PAD Launch Excel + Read from Excel worksheet

UiPath Build DataTable / Add Data Row → PAD Create new data table + Insert row into data table

UiPath Write Range → PAD Write to Excel worksheet

UiPath Try Catch → PAD Begin/End Error Handling (Catch block)



---

Những lỗi hay gặp & cách fix nhanh

Header lặp: chắc chắn Read from Excel sử dụng "Use first row as column names". Nếu vẫn lặp, lọc dòng header trong curDT trước khi insert.

Số bị format text: dùng Convert text to number và chuẩn hóa (bỏ , thousands separator).

Memory: nếu masterDT quá lớn (tens of thousands rows), cân nhắc ghi từng batch ra file tạm thay vì giữ cả trong memory.

Đường dẫn SharePoint: nếu file nằm trên SharePoint, tốt nhất dùng Cloud Flow để tải file về folder local trước khi chạy PAD.



---

Kết thúc buổi (deliverables)

Flow PAD có thể: duyệt folder → gộp mọi file Excel → tạo Sales_Master.xlsx → log kết quả.

Có file log PAD_log.txt chứa thông tin success/warn/error.

Danh sách các file lỗi (nếu có) để xử lý thủ công.



---

Nếu bạn muốn mình tiếp tục viết bản “action-by-action” dưới dạng checklist chính xác từng tham số (mỗi action 1 dòng, sẵn sàng để bạn copy vào file training Excel), mình sẽ tạo ngay cho bạn — hoặc mình có thể cập nhật file TrainingPlan_PAD.xlsx với toàn bộ nội dung chi tiết ngày 5 vào cột Note. Bạn muốn mình làm cái nào tiếp theo?

