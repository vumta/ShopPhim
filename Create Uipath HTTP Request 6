C√≥! Trong **UiPath**, b·∫°n ho√†n to√†n c√≥ th·ªÉ **truy·ªÅn bi·∫øn v√†o ph·∫ßn Body** khi g·ª≠i **HTTP POST** t·ªõi Power Automate (ho·∫∑c b·∫•t k·ª≥ API n√†o).

---

## ‚úÖ C√°ch truy·ªÅn bi·∫øn v√†o Body c·ªßa HTTP Request trong UiPath

Gi·∫£ s·ª≠ b·∫°n c√≥ bi·∫øn:

```vb
folderPath = "/Shared Documents/Reports"
```

---

### üî∑ C√°ch 1: D√πng **String Interpolation (VB.NET)**

G√°n bi·∫øn `jsonBody` ki·ªÉu `String` nh∆∞ sau:

```vb
jsonBody = "{
  ""FolderPath"": """ + folderPath + """
}"
```

üí° L∆∞u √Ω:
- S·ª≠ d·ª•ng `""` ƒë·ªÉ escape d·∫•u `"` trong chu·ªói
- ƒê√¢y l√† c√°ch nhanh v√† d·ªÖ ki·ªÉm so√°t

---

### üî∑ C√°ch 2: D√πng **`JObject` ho·∫∑c `SerializeObject`**

N·∫øu b·∫°n mu·ªën chu·∫©n h∆°n:

#### ‚úî B∆∞·ªõc 1: T·∫°o Dictionary

```vb
dictBody = New Dictionary(Of String, Object)
dictBody("FolderPath") = folderPath
```

#### ‚úî B∆∞·ªõc 2: Serialize th√†nh JSON

```vb
jsonBody = JsonConvert.SerializeObject(dictBody)
```

üí° Nh·ªõ import:
```vb
Imports Newtonsoft.Json
```

---

### üî∑ D√πng trong HTTP Request

G√°n `jsonBody` v√†o **Body** c·ªßa activity `HTTP Request`:

| Thu·ªôc t√≠nh     | Gi√° tr·ªã                            |
|----------------|-------------------------------------|
| Method         | `POST`                              |
| Body           | `jsonBody` (ki·ªÉu string JSON)       |
| Headers        | `{ "Content-Type": "application/json" }` |

---

### üì¶ V√≠ d·ª• Body th·ª±c t·∫ø g·ª≠i t·ªõi Power Automate:

```json
{
  "FolderPath": "/Shared Documents/Reports"
}
```

---

## üß† Bonus: Ki·ªÉm tra JSON tr∆∞·ªõc khi g·ª≠i

In ra Log ho·∫∑c Message Box:

```vb
MessageBox.Show(jsonBody)
```

---

## ‚úÖ T·ªïng k·∫øt

| C√°ch | ∆Øu ƒëi·ªÉm |
|------|---------|
| String n·ªëi `""` | Nhanh g·ªçn, d·ªÖ √°p d·ª•ng |
| Dictionary + Serialize | Chu·∫©n, d·ªÖ m·ªü r·ªông nhi·ªÅu bi·∫øn |

---

Mu·ªën m√¨nh g·ª≠i m·∫´u workflow `HTTP Request` ƒë·∫ßy ƒë·ªß t·ª´ UiPath k√®m bi·∫øn truy·ªÅn ƒë·ªông kh√¥ng?
