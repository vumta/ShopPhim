Tuy·ªát v·ªùi! D∆∞·ªõi ƒë√¢y l√† **t√†i li·ªáu h∆∞·ªõng d·∫´n ho√†n ch·ªânh step-by-step** cho gi·∫£i ph√°p d√πng **Child Flow k·∫øt h·ª£p `Do Until + Queue`** trong **Power Automate** ƒë·ªÉ **l·∫•y t·∫•t c·∫£ file trong th∆∞ m·ª•c SharePoint (bao g·ªìm subfolder nhi·ªÅu c·∫•p)** ‚Äî m√¥ ph·ªèng ƒë·ªá quy nh∆∞ng **kh√¥ng vi ph·∫°m h·∫°n ch·∫ø Child Flow t·ª± g·ªçi ch√≠nh n√≥**.

---

# üìò H∆∞·ªõng D·∫´n Ho√†n Ch·ªânh  
## L·∫•y to√†n b·ªô file trong SharePoint (bao g·ªìm subfolder)  
**Gi·∫£i ph√°p: Child Flow + Do Until + Queue t·ª± qu·∫£n l√Ω**

---

## üéØ M·ª•c ti√™u

- Flow **cha** ƒë∆∞·ª£c g·ªçi t·ª´ **UiPath** qua HTTP.
- Flow cha duy·ªát t·∫•t c·∫£ subfolder c·ªßa m·ªôt th∆∞ m·ª•c SharePoint b·∫•t k·ª≥ (m·ªçi c·∫•p).
- **Flow con** ch·ªâ x·ª≠ l√Ω m·ªôt folder ƒë∆°n, tr·∫£ v·ªÅ:
  - Danh s√°ch file trong folder ƒë√≥.
  - Danh s√°ch c√°c subfolder.
- K·∫øt qu·∫£ tr·∫£ v·ªÅ cho UiPath l√†: **To√†n b·ªô file** ·ªü m·ªçi c·∫•p th∆∞ m·ª•c SharePoint.

---

## üß± C·∫•u tr√∫c t·ªïng th·ªÉ

| Th√†nh ph·∫ßn               | M√¥ t·∫£ |
|--------------------------|------|
| **Flow cha** `Main_GetAllFiles` | ƒêi·ªÅu khi·ªÉn ch√≠nh, duy·ªát folder theo queue. |
| **Flow con** `Child_ProcessFolder` | Nh·∫≠n 1 folder ‚Üí tr·∫£ v·ªÅ `Files` v√† `Subfolders`. |

---

## üß© 1. T·∫°o Flow con: `Child_ProcessFolder`

### üéØ Ch·ª©c nƒÉng:
Nh·∫≠n 1 th∆∞ m·ª•c SharePoint ‚Üí Tr·∫£ v·ªÅ:
- `Files`: Danh s√°ch file trong folder ƒë√≥.
- `Subfolders`: Danh s√°ch ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi c·ªßa c√°c folder con.

### üõ† Step-by-step:

1. **Trigger**: `Manually trigger a flow` (n√™n ƒë·ªïi th√†nh "Instant" > "Manually").
   - Input: `FolderPath` (string)

2. **G·ª≠i HTTP Request ƒë·∫øn SharePoint**:
   - Action: `Send an HTTP request to SharePoint`
   - Method: `GET`
   - URI:
     ```http
     _api/web/GetFolderByServerRelativeUrl('<FolderPath>')?$expand=Files,Folders
     ```
     > `FolderPath` ph·∫£i l√† **ServerRelativeUrl**, v√≠ d·ª•: `"Shared Documents/Folder A"`

3. **Parse JSON**:
   - Parse `Files` v√† `Folders` t·ª´ k·∫øt qu·∫£.

4. **Chu·∫©n h√≥a output**:
   - `Files`: Tr·∫£ v·ªÅ nh∆∞ l√† m·∫£ng g·ªëc t·ª´ JSON.
   - `Subfolders`: Duy·ªát `Folders.results` ‚Üí l·∫•y `ServerRelativeUrl` ‚Üí ƒë∆∞a th√†nh m·∫£ng.

5. **Outputs**:
   - `Files` (array)
   - `Subfolders` (array)

---

## üèó 2. T·∫°o Flow cha: `Main_GetAllFiles`

### üéØ Ch·ª©c nƒÉng:
Duy·ªát t·∫•t c·∫£ folder/subfolder th√¥ng qua 1 queue (`PendingFolders`)  
‚Üí G·ªçi Child Flow nhi·ªÅu l·∫ßn, gom d·ªØ li·ªáu l·∫°i ‚Üí Tr·∫£ v·ªÅ JSON k·∫øt qu·∫£.

### üõ† Step-by-step:

1. **Trigger**: `When a HTTP request is received`
   - Body:
     ```json
     {
       "FolderPath": "Shared Documents/YourRootFolder"
     }
     ```

2. **Initialize Variables**:
   - `PendingFolders` (array) = `[triggerBody()?['FolderPath']]`
   - `AllFiles` (array) = `[]`

3. **Do Until** `length(PendingFolders) is equal to 0`:

   Trong v√≤ng l·∫∑p:

   a. **L·∫•y folder ƒë·∫ßu ti√™n**:
   ```plaintext
   first(variables('PendingFolders'))
   ```

   b. **G·ªçi Child Flow `Child_ProcessFolder`**:
   - Input: th∆∞ m·ª•c v·ª´a l·∫•y.

   c. **Append `Files` v√†o `AllFiles`**:
   ```plaintext
   append to array variable('AllFiles', outputs('Child_ProcessFolder')?['Files'])
   ```

   d. **Append `Subfolders` v√†o `PendingFolders`**:
   ```plaintext
   union(skip(variables('PendingFolders'), 1), outputs('Child_ProcessFolder')?['Subfolders'])
   ```

   > Gi·∫£i th√≠ch:
   > - `skip(...)`: b·ªè folder ƒë√£ x·ª≠ l√Ω.
   > - `union(...)`: th√™m c√°c subfolder m·ªõi v√†o queue ti·∫øp theo.

4. **Sau khi Do Until ho√†n t·∫•t**:
   - Action: `Response` ‚Üí Tr·∫£ JSON:
     ```json
     {
       "files": "@variables('AllFiles')"
     }
     ```

---

## üì¶ C√°ch Xu·∫•t/Nh·∫≠p Flow d∆∞·ªõi d·∫°ng .zip

### üì§ Export:
- V√†o `My Flows` > Ch·ªçn Flow > ‚ãØ > Export > `Package (.zip)`

### üì• Import:
- V√†o Power Automate > `Import` > Ch·ªçn file `.zip`
- Thi·∫øt l·∫≠p l·∫°i k·∫øt n·ªëi (SharePoint, HTTP...)

---

## üìå L∆∞u √Ω

- `FolderPath` lu√¥n l√† **Server Relative Path**, kh√¥ng c√≥ d·∫•u `/` ·ªü ƒë·∫ßu.
  - V√≠ d·ª•: `"Shared Documents"` ho·∫∑c `"Shared Documents/2025/B√°o c√°o"`

- N·∫øu t√™n folder ch·ª©a k√Ω t·ª± ƒë·∫∑c bi·ªát (v√≠ d·ª•: ti·∫øng Nh·∫≠t), h√£y **`uriComponent()`** h√≥a tr∆∞·ªõc khi g·ªçi trong Flow.

- Trong `Do Until`, lu√¥n c·∫≠p nh·∫≠t `PendingFolders` ƒë·ªÉ tr√°nh l·∫∑p v√¥ h·∫°n.

- Child Flow kh√¥ng th·ªÉ g·ªçi l·∫°i ch√≠nh n√≥ ‚Üí Gi·∫£i ph√°p d√πng Flow cha ƒë·ªÉ m√¥ ph·ªèng ƒë·ªá quy b·∫±ng `queue`.

---

## ‚úÖ ∆Øu ƒëi·ªÉm gi·∫£i ph√°p

- Kh√¥ng vi ph·∫°m h·∫°n ch·∫ø k·ªπ thu·∫≠t Power Automate (child flow recursion).
- C√≥ th·ªÉ x·ª≠ l√Ω h√†ng ng√†n th∆∞ m·ª•c/file.
- D·ªÖ m·ªü r·ªông & t√°i s·ª≠ d·ª•ng.

---

B·∫°n c√≥ mu·ªën m√¨nh g·ª≠i lu√¥n 2 file `.zip` m·∫´u Flow cha + Flow con ƒë·ªÉ b·∫°n import tr·ª±c ti·∫øp kh√¥ng? N·∫øu c√≥, h√£y upload 1 file `.txt` b·∫•t k·ª≥ v√† m√¨nh s·∫Ω g·ª≠i l·∫°i file `.zip` qua ƒë√≥ nh√©.
