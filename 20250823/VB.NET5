R·∫•t t·ªët üëç. M√¨nh hi·ªÉu y√™u c·∫ßu m·ªõi:

Khi convert t·ª´ CSV ‚Üí TXT:

Ngo√†i vi·ªác t√°ch c·ªôt ƒë√∫ng (tab-delimited, kh√¥ng BOM), c·∫ßn xo√° c√°c k√Ω t·ª± th·ª´a nh∆∞ Excel th∆∞·ªùng sinh ra khi export CSV (=""value"", ="00123", ho·∫∑c th·ª´a " bao quanh).

K·∫øt qu·∫£ trong TXT ch·ªâ gi·ªØ l·∫°i gi√° tr·ªã th·ª±c (value), kh√¥ng c√≤n d·∫•u =, "", ho·∫∑c BOM.




---

‚úÖ Code VB.NET (Invoke Code trong UiPath)

' INPUT:  csvPath As String (In)
' OUTPUT: txtPath As String (Out)

' 1) T·∫°o ƒë∆∞·ªùng d·∫´n .txt ƒë√≠ch t·ª´ .csv
txtPath = System.IO.Path.ChangeExtension(csvPath, ".txt")

' 2) Chu·∫©n b·ªã danh s√°ch encoding (h·ªó tr·ª£ Nh·∫≠t/Trung/H√†n)
Dim encodings As System.Text.Encoding() = New System.Text.Encoding() {
    System.Text.Encoding.UTF8,
    System.Text.Encoding.Unicode,            ' UTF-16 LE
    System.Text.Encoding.BigEndianUnicode,   ' UTF-16 BE
    System.Text.Encoding.GetEncoding("shift_jis"),
    System.Text.Encoding.GetEncoding("gb2312"),
    System.Text.Encoding.GetEncoding("euc-kr")
}

' 3) Danh s√°ch delimiter ph·ªï bi·∫øn
Dim possibleDelims As Char() = New Char() {","c, ";"c, ChrW(9), "|"c} ' ChrW(9) = tab

' 4) Ph√°t hi·ªán encoding + delimiter t·ªët nh·∫•t d·ª±a tr√™n d√≤ng ƒë·∫ßu
Dim chosenEncoding As System.Text.Encoding = System.Text.Encoding.UTF8
Dim chosenDelimiter As Char = ","c
Dim maxCols As Integer = -1

Dim eIdx As Integer
For eIdx = 0 To encodings.Length - 1
    Dim enc As System.Text.Encoding = encodings(eIdx)
    Try
        Using sr As New System.IO.StreamReader(csvPath, enc, True)
            Dim firstLine As String = Nothing
            Do While Not sr.EndOfStream AndAlso (firstLine Is Nothing OrElse firstLine.Length = 0)
                firstLine = sr.ReadLine()
            Loop
            If firstLine Is Nothing Then Exit Try
            If firstLine.Length > 0 AndAlso AscW(firstLine(0)) = &HFEFF Then
                firstLine = firstLine.Substring(1)
            End If

            Dim bestForThisEnc As Char = ","c
            Dim bestCols As Integer = -1

            Dim dIdx As Integer
            For dIdx = 0 To possibleDelims.Length - 1
                Dim d As Char = possibleDelims(dIdx)
                Dim parts() As String = firstLine.Split(d)
                Dim colCount As Integer = parts.Length
                If colCount > bestCols Then
                    bestCols = colCount
                    bestForThisEnc = d
                End If
            Next

            If bestCols > maxCols Then
                maxCols = bestCols
                chosenEncoding = enc
                chosenDelimiter = bestForThisEnc
            End If
        End Using
    Catch ex As System.Exception
        ' B·ªè qua encoding l·ªói
    End Try
Next

' 5) ƒê·ªçc CSV v√† ghi sang TXT (UTF-8 kh√¥ng BOM)
Dim utf8NoBom As New System.Text.UTF8Encoding(False)

Using reader As New System.IO.StreamReader(csvPath, chosenEncoding, True)
    Using writer As New System.IO.StreamWriter(txtPath, False, utf8NoBom)
        Do While Not reader.EndOfStream
            Dim line As String = reader.ReadLine()
            If line Is Nothing Then Exit Do

            ' B·ªè BOM U+FEFF ƒë·∫ßu d√≤ng n·∫øu c√≥
            If line.Length > 0 AndAlso AscW(line(0)) = &HFEFF Then
                line = line.Substring(1)
            End If

            ' Parser CSV c∆° b·∫£n (d·∫•u "‚Ä¶" v√† escape "")
            Dim fields As New System.Collections.Generic.List(Of String)()
            Dim sb As New System.Text.StringBuilder()
            Dim inQuotes As Boolean = False
            Dim i As Integer = 0
            Do While i < line.Length
                Dim ch As Char = line(i)
                If ch = """"c Then
                    If inQuotes AndAlso i + 1 < line.Length AndAlso line(i + 1) = """"c Then
                        sb.Append(""""c)
                        i += 1
                    Else
                        inQuotes = Not inQuotes
                    End If
                ElseIf (ch = chosenDelimiter) AndAlso Not inQuotes Then
                    fields.Add(sb.ToString())
                    sb.Length = 0
                Else
                    sb.Append(ch)
                End If
                i += 1
            Loop
            fields.Add(sb.ToString())

            ' L√†m s·∫°ch d·ªØ li·ªáu t·ª´ng field (xo√° ="", xo√° th·ª´a quote)
            Dim cleanFields As New System.Collections.Generic.List(Of String)()
            For Each f As String In fields
                Dim val As String = f.Trim()

                ' Xo√° ="..." ‚Üí ...
                If val.StartsWith("=""") AndAlso val.EndsWith("""") Then
                    val = val.Substring(3, val.Length - 4)
                End If

                ' Xo√° quote b·ªçc ngo√†i n·∫øu c√≥
                If val.StartsWith("""") AndAlso val.EndsWith("""") AndAlso val.Length > 1 Then
                    val = val.Substring(1, val.Length - 2)
                End If

                cleanFields.Add(val)
            Next

            ' Ghi sang TXT b·∫±ng tab
            writer.WriteLine(String.Join(vbTab, cleanFields.ToArray()))
        Loop
    End Using
End Using

' 6) Xo√° file CSV g·ªëc
If System.IO.File.Exists(csvPath) Then
    System.IO.File.Delete(csvPath)
End If


---

üîé C·∫£i ti·∫øn th√™m:

X·ª≠ l√Ω =""value"" ‚Üí value

X·ª≠ l√Ω ="00123" ‚Üí 00123 (gi·ªØ s·ªë 0 ƒë·∫ßu)

Xo√° th·ª´a " b·ªçc ngo√†i

T·∫•t c·∫£ output lu√¥n l√† UTF-8 kh√¥ng BOM



---

B·∫°n c√≥ mu·ªën m√¨nh th√™m Out argument logDetail ƒë·ªÉ tr·∫£ v·ªÅ trong UiPath (v√≠ d·ª•: "Encoding=Shift_JIS, Delimiter=','") ƒë·ªÉ d·ªÖ debug khi nhi·ªÅu lo·∫°i CSV kh√°c nhau kh√¥ng?

