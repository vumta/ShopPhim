R√µ üëç. V·∫•n ƒë·ªÅ b·∫°n n√≥i ch√≠nh l√† d·∫°ng Excel CSV xu·∫•t ra th∆∞·ªùng c√≥ "=""xxx""".
V√≠ d·ª•:

Trong CSV c√≥ "=""1""" ‚Üí ph·∫£i ra 1

"=""outer""" ‚Üí ph·∫£i ra outer

"=""ABC123""" ‚Üí ph·∫£i ra ABC123


T·ª©c l√† lu√¥n c√≥ m·∫´u ="xxx" bao quanh, v√† xxx c√≥ ƒë·ªô d√†i ƒë·ªông.

M√¨nh s·∫Ω c·∫≠p nh·∫≠t parser trong Invoke Code VB.NET:

Gi·ªØ nguy√™n ph·∫ßn auto detect encoding, delimiter

Trong b∆∞·ªõc l√†m s·∫°ch field, th√™m check If val.StartsWith("=""") AndAlso val.EndsWith("""") th√¨ c·∫Øt b·ªè =" ·ªü ƒë·∫ßu v√† " ·ªü cu·ªëi

Kh√¥ng c√≤n hardcode ƒë·ªô d√†i c·∫Øt ‚Üí x·ª≠ l√Ω ƒë·ªông ch√≠nh x√°c



---

‚úÖ Code ho√†n ch·ªânh (ch·∫°y trong UiPath Invoke Code)

' INPUT:  csvPath As String (In)
' OUTPUT: txtPath As String (Out)

' 1) T·∫°o ƒë∆∞·ªùng d·∫´n .txt t·ª´ .csv
txtPath = System.IO.Path.ChangeExtension(csvPath, ".txt")

' 2) Encoding (UTF-8, Nh·∫≠t, Trung, H√†n)
Dim encodings As System.Text.Encoding() = New System.Text.Encoding() {
    System.Text.Encoding.UTF8,
    System.Text.Encoding.Unicode,
    System.Text.Encoding.BigEndianUnicode,
    System.Text.Encoding.GetEncoding("shift_jis"),
    System.Text.Encoding.GetEncoding("gb2312"),
    System.Text.Encoding.GetEncoding("euc-kr")
}

' 3) Danh s√°ch delimiter c√≥ th·ªÉ c√≥
Dim possibleDelims As Char() = New Char() {","c, ";"c, ChrW(9), "|"c}

Dim chosenEncoding As System.Text.Encoding = System.Text.Encoding.UTF8
Dim chosenDelimiter As Char = ","c
Dim maxCols As Integer = -1

' 4) Detect encoding + delimiter
Dim eIdx As Integer
For eIdx = 0 To encodings.Length - 1
    Dim enc As System.Text.Encoding = encodings(eIdx)
    Try
        Using sr As New System.IO.StreamReader(csvPath, enc, True)
            Dim firstLine As String = Nothing
            Do While Not sr.EndOfStream AndAlso (firstLine Is Nothing OrElse firstLine.Length = 0)
                firstLine = sr.ReadLine()
            Loop
            If firstLine Is Nothing Then Exit Try
            If firstLine.Length > 0 AndAlso AscW(firstLine(0)) = &HFEFF Then
                firstLine = firstLine.Substring(1)
            End If

            Dim bestForThisEnc As Char = ","c
            Dim bestCols As Integer = -1
            Dim dIdx As Integer
            For dIdx = 0 To possibleDelims.Length - 1
                Dim d As Char = possibleDelims(dIdx)
                Dim parts() As String = firstLine.Split(d)
                Dim colCount As Integer = parts.Length
                If colCount > bestCols Then
                    bestCols = colCount
                    bestForThisEnc = d
                End If
            Next

            If bestCols > maxCols Then
                maxCols = bestCols
                chosenEncoding = enc
                chosenDelimiter = bestForThisEnc
            End If
        End Using
    Catch ex As System.Exception
        ' b·ªè qua
    End Try
Next

' 5) ƒê·ªçc CSV ‚Üí ghi TXT UTF-8 no BOM
Dim utf8NoBom As New System.Text.UTF8Encoding(False)

Using reader As New System.IO.StreamReader(csvPath, chosenEncoding, True)
    Using writer As New System.IO.StreamWriter(txtPath, False, utf8NoBom)

        Do While Not reader.EndOfStream
            Dim line As String = reader.ReadLine()
            If line Is Nothing Then Exit Do

            If line.Length > 0 AndAlso AscW(line(0)) = &HFEFF Then
                line = line.Substring(1)
            End If

            ' Parser field
            Dim fields As New System.Collections.Generic.List(Of String)()
            Dim sb As New System.Text.StringBuilder()
            Dim inQuotes As Boolean = False
            Dim i As Integer = 0

            Do While i < line.Length
                Dim ch As Char = line(i)
                If ch = """"c Then
                    If inQuotes AndAlso i + 1 < line.Length AndAlso line(i + 1) = """"c Then
                        sb.Append(""""c)
                        i += 1
                    Else
                        inQuotes = Not inQuotes
                    End If
                ElseIf (ch = chosenDelimiter) AndAlso Not inQuotes Then
                    fields.Add(sb.ToString())
                    sb.Length = 0
                Else
                    sb.Append(ch)
                End If
                i += 1
            Loop
            fields.Add(sb.ToString())

            ' L√†m s·∫°ch field
            Dim cleanFields As New System.Collections.Generic.List(Of String)()
            For Each f As String In fields
                Dim val As String = f.Trim()

                ' Tr∆∞·ªùng h·ª£p ƒë·∫∑c bi·ªát: ="xxx"
                If val.StartsWith("=""") AndAlso val.EndsWith("""") AndAlso val.Length > 3 Then
                    ' B·ªè ="  ·ªü ƒë·∫ßu v√† " ·ªü cu·ªëi
                    val = val.Substring(2, val.Length - 3)
                ElseIf val.StartsWith("""") AndAlso val.EndsWith("""") AndAlso val.Length > 1 Then
                    ' B·ªè quote ngo√†i (n·∫øu c√≥)
                    val = val.Substring(1, val.Length - 2)
                End If

                ' X√≥a xu·ªëng d√≤ng trong cell
                val = val.Replace(vbCrLf, " ").Replace(vbCr, " ").Replace(vbLf, " ")

                cleanFields.Add(val)
            Next

            writer.WriteLine(String.Join(vbTab, cleanFields.ToArray()))
        Loop

    End Using
End Using

' 6) Xo√° file CSV g·ªëc
If System.IO.File.Exists(csvPath) Then
    System.IO.File.Delete(csvPath)
End If


---

üîë ƒêi·ªÉm m·ªõi

"=""xxx""" ‚Üí t√°ch ch√≠nh x√°c xxx (chi·ªÅu d√†i ƒë·ªông).

Kh√¥ng m·∫•t k√Ω t·ª± ƒë·∫ßu/cu·ªëi nh∆∞ tr∆∞·ªõc (outer ‚Üí chu·∫©n, kh√¥ng c√≤n th√†nh uter).

Unicode an to√†n (UTF-8, Shift-JIS, GB2312, EUC-KR).

Xu·∫•t .txt tab-delimited, 1 row CSV = 1 row TXT.

CSV g·ªëc b·ªã x√≥a.



---

üëâ B·∫°n c√≥ mu·ªën m√¨nh b·ªï sung th√™m logDetail (Out Argument) ghi r√µ Encoding + Delimiter ƒë√£ detect kh√¥ng, ƒë·ªÉ d·ªÖ debug sau n√†y?

