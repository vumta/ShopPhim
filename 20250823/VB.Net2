üëå hi·ªÉu r·ªìi. Trong Invoke Code c·ªßa UiPath, b·∫°n kh√¥ng th·ªÉ khai b√°o Sub Main() ho·∫∑c function ri√™ng, m√† ch·ªâ c·∫ßn vi·∫øt code ch·∫°y tr·ª±c ti·∫øp (UiPath s·∫Ω wrap gi√πm).

M√¨nh s·∫Ω ch·ªânh l·∫°i code ƒë·ªÉ ch·∫°y th·∫≥ng, kh√¥ng l·ªói.


---

üîπ Code VB.NET (ch·∫°y tr·ª±c ti·∫øp trong Invoke Code UiPath)

Trong Invoke Code ‚Üí VB.NET, b·∫°n ch·ªâ c·∫ßn d√°n:

Imports System.IO
Imports System.Text

' Ki·ªÉm tra file CSV t·ªìn t·∫°i
If Not File.Exists(csvPath) Then
    Throw New FileNotFoundException("Kh√¥ng t√¨m th·∫•y file CSV: " & csvPath)
End If

' C√°c encoding ph·ªï bi·∫øn (UTF-8, UTF-16, Shift-JIS, GB2312, EUC-KR)
Dim encodings As Encoding() = {
    Encoding.UTF8,
    Encoding.Unicode,            ' UTF-16 LE
    Encoding.BigEndianUnicode,   ' UTF-16 BE
    Encoding.GetEncoding("shift_jis"),
    Encoding.GetEncoding("gb2312"),
    Encoding.GetEncoding("euc-kr")
}

' C√°c delimiter ph·ªï bi·∫øn
Dim delimiters As Char() = {","c, ";"c, vbTab, "|"c}
Dim bestDelimiter As Char = ","c

Dim chosenEncoding As Encoding = Encoding.UTF8
Dim maxColumns As Integer = 0

' Th·ª≠ t·ª´ng encoding ƒë·ªÉ detect delimiter t·ªët nh·∫•t
For Each enc As Encoding In encodings
    Try
        Using sr As New StreamReader(csvPath, enc, True)
            Dim firstLine As String = sr.ReadLine()
            If Not String.IsNullOrEmpty(firstLine) Then
                For Each d As Char In delimiters
                    Dim colCount As Integer = firstLine.Split(d).Length
                    If colCount > maxColumns Then
                        maxColumns = colCount
                        bestDelimiter = d
                        chosenEncoding = enc
                    End If
                Next
            End If
        End Using
    Catch ex As Exception
        ' N·∫øu encoding n√†y kh√¥ng h·ª£p l·ªá th√¨ b·ªè qua
    End Try
Next

' Writer v·ªõi UTF-8 kh√¥ng BOM
Dim utf8NoBOM As New UTF8Encoding(False)

' ƒê·ªçc to√†n b·ªô CSV v·ªõi encoding detect ƒë∆∞·ª£c v√† ghi TXT tab-delimited
Using reader As New StreamReader(csvPath, chosenEncoding, True)
    Using writer As New StreamWriter(txtPath, False, utf8NoBOM)
        Dim line As String
        Do While Not reader.EndOfStream
            line = reader.ReadLine()
            Dim columns() As String = line.Split(bestDelimiter)
            writer.WriteLine(String.Join(vbTab, columns))
        Loop
    End Using
End Using


---

üîπ C√°ch c·∫•u h√¨nh Arguments trong Invoke Code

csvPath ‚Üí Direction: In ‚Üí Type: String ‚Üí V√≠ d·ª•: "C:\Data\input.csv"

txtPath ‚Üí Direction: In ‚Üí Type: String ‚Üí V√≠ d·ª•: "C:\Data\output.txt"



---

üëâ B·∫°n c√≥ mu·ªën m√¨nh g·ª≠i lu√¥n file .xaml m·∫´u (UiPath workflow c√≥ s·∫µn Invoke Code + arguments) ƒë·ªÉ ch·ªâ c·∫ßn import l√† ch·∫°y ƒë∆∞·ª£c kh√¥ng?

