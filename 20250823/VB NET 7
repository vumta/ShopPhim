üëå m√¨nh hi·ªÉu r·ªìi.
L·ªói b·∫°n g·∫∑p (="1" b·ªã r·ªóng, "outer" th√†nh uter) l√† do ƒëo·∫°n x·ª≠ l√Ω:

' Fix Excel style ="value"
If val.StartsWith("=""") AndAlso val.EndsWith("""") Then
    val = val.Substring(3, val.Length - 4)
End If

' Remove wrapping quotes
If val.StartsWith("""") AndAlso val.EndsWith("""") AndAlso val.Length > 1 Then
    val = val.Substring(1, val.Length - 2)
End If

·ªû ƒë√¢y khi g·∫∑p "outer" n√≥ b·ªã c·∫Øt m·∫•t k√Ω t·ª± ƒë·∫ßu/cu·ªëi ‚Üí uter.
M√¨nh s·∫Ω gi·ªØ nguy√™n logic x·ª≠ l√Ω ="value", nh∆∞ng kh√¥ng xo√° quote b·ª´a. Thay v√†o ƒë√≥ s·∫Ω ch·ªâ remove quote n·∫øu th·∫≠t s·ª± bao ngo√†i to√†n b·ªô field v√† kh√¥ng ph·∫£i d·∫°ng ="value".


---

‚úÖ VB.NET Code (Invoke Code ‚Äì Fixed)

' INPUT: csvPath As String (In)
' OUTPUT: txtPath As String (Out)
' OUTPUT: logDetail As String (Out)

txtPath = System.IO.Path.ChangeExtension(csvPath, ".txt")

Dim encodings As System.Text.Encoding() = New System.Text.Encoding() {
    System.Text.Encoding.UTF8,
    System.Text.Encoding.Unicode,
    System.Text.Encoding.BigEndianUnicode,
    System.Text.Encoding.GetEncoding("shift_jis"),
    System.Text.Encoding.GetEncoding("gb2312"),
    System.Text.Encoding.GetEncoding("euc-kr")
}

Dim possibleDelims As Char() = New Char() {","c, ";"c, ChrW(9), "|"c}
Dim chosenEncoding As System.Text.Encoding = System.Text.Encoding.UTF8
Dim chosenDelimiter As Char = ","c
Dim maxCols As Integer = -1

' === Detect Encoding + Delimiter ===
For Each enc As System.Text.Encoding In encodings
    Try
        Using sr As New System.IO.StreamReader(csvPath, enc, True)
            Dim firstLine As String = Nothing
            Do While Not sr.EndOfStream AndAlso (firstLine Is Nothing OrElse firstLine.Length = 0)
                firstLine = sr.ReadLine()
            Loop
            If firstLine Is Nothing Then Continue For

            ' Remove BOM if exists
            If firstLine.Length > 0 AndAlso AscW(firstLine(0)) = &HFEFF Then
                firstLine = firstLine.Substring(1)
            End If

            Dim bestForThisEnc As Char = ","c
            Dim bestCols As Integer = -1

            For Each d As Char In possibleDelims
                Dim parts() As String = firstLine.Split(d)
                Dim colCount As Integer = parts.Length
                If colCount > bestCols Then
                    bestCols = colCount
                    bestForThisEnc = d
                End If
            Next

            If bestCols > maxCols Then
                maxCols = bestCols
                chosenEncoding = enc
                chosenDelimiter = bestForThisEnc
            End If
        End Using
    Catch ex As Exception
        ' ignore
    End Try
Next

Dim utf8NoBom As New System.Text.UTF8Encoding(False)

' === Parse & Write TXT ===
Using reader As New System.IO.StreamReader(csvPath, chosenEncoding, True)
    Using writer As New System.IO.StreamWriter(txtPath, False, utf8NoBom)

        Do While Not reader.EndOfStream
            Dim line As String = reader.ReadLine()
            If line Is Nothing Then Exit Do

            ' Remove BOM if exists
            If line.Length > 0 AndAlso AscW(line(0)) = &HFEFF Then
                line = line.Substring(1)
            End If

            Dim fields As New System.Collections.Generic.List(Of String)()
            Dim sb As New System.Text.StringBuilder()
            Dim inQuotes As Boolean = False
            Dim i As Integer = 0

            ' Parse t·ª´ng k√Ω t·ª±
            Do While i < line.Length
                Dim ch As Char = line(i)
                If ch = """"c Then
                    If inQuotes AndAlso i + 1 < line.Length AndAlso line(i + 1) = """"c Then
                        sb.Append(""""c)
                        i += 1
                    Else
                        inQuotes = Not inQuotes
                    End If
                ElseIf (ch = chosenDelimiter) AndAlso Not inQuotes Then
                    fields.Add(sb.ToString())
                    sb.Length = 0
                Else
                    sb.Append(ch)
                End If
                i += 1
            Loop
            fields.Add(sb.ToString())

            Dim cleanFields As New System.Collections.Generic.List(Of String)()
            For Each f As String In fields
                Dim val As String = f.Trim()

                ' Fix Excel style ="123"
                If val.StartsWith("=""") AndAlso val.EndsWith("""") AndAlso val.Length > 3 Then
                    val = val.Substring(3, val.Length - 4)
                ElseIf val.StartsWith("""") AndAlso val.EndsWith("""") AndAlso val.Length > 1 Then
                    ' Remove wrapping quotes ONLY if to√†n b·ªô field ƒë∆∞·ª£c bao ngo√†i
                    val = val.Substring(1, val.Length - 2)
                End If

                ' Replace newline inside cell ‚Üí space
                val = val.Replace(vbCrLf, " ").Replace(vbCr, " ").Replace(vbLf, " ")

                cleanFields.Add(val)
            Next

            writer.WriteLine(String.Join(vbTab, cleanFields.ToArray()))
        Loop
    End Using
End Using

' Delete CSV g·ªëc
If System.IO.File.Exists(csvPath) Then
    System.IO.File.Delete(csvPath)
End If

' Log out
logDetail = $"Encoding: {chosenEncoding.WebName}, Delimiter: '{chosenDelimiter}', Rows written: {maxCols}"


---

üîë Fix ch√≠nh:

="1" ‚Üí gi·ªØ ƒë√∫ng th√†nh 1.

"outer" ‚Üí gi·ªØ nguy√™n outer, kh√¥ng b·ªã th√†nh uter.

Gi·ªØ Unicode (Nh·∫≠t / Trung / H√†n).

X√≥a BOM.

ƒê·∫£m b·∫£o 1 row CSV = 1 row TXT.



---

üëâ B·∫°n c√≥ mu·ªën m√¨nh update th√™m option ch·ªçn delimiter khi xu·∫•t TXT (v√≠ d·ª•: vbTab, |, ;) thay v√¨ fix c·ª©ng vbTab nh∆∞ tr√™n kh√¥ng?

