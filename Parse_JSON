Vấn đề bạn gặp phải là rất phổ biến: khi sử dụng `Send an HTTP request to SharePoint` với `GetFolderByServerRelativeUrl('<path>')`, nếu đường dẫn chứa ký tự đặc biệt (như tiếng Nhật, dấu cách, ký tự unicode, v.v.), **Power Automate sẽ tự động mã hóa đường dẫn (URL encode)** → và SharePoint có thể **không hiểu chính xác** đường dẫn đó nữa → dẫn tới lỗi **"File not found"** hoặc **"The resource cannot be found."**

---

## ✅ Giải pháp: **Tự encode đúng cách và truyền vào API chuẩn**

---

### 🧩 Vấn đề:
- Đường dẫn như:
  ```
  /Shared Documents/日本語/レポート 2024
  ```
  sẽ bị Power Automate mã hóa thành:
  ```
  /Shared%20Documents/%E6%97%A5%E6%9C%AC%E8%AA%9E/%E3%83%AC%E3%83%9D%E3%83%BC%E3%83%88%202024
  ```
  nhưng SharePoint cần bạn xử lý encode đúng cách — nhất là với hàm như `GetFolderByServerRelativeUrl()`.

---

## ✅ Giải pháp 1: Dùng **uriComponent()** để encode chính xác từng phần

### 👉 Cách làm:

Thay vì truyền nguyên chuỗi dài vào, bạn nên encode bằng tay bằng cách:

### 🔹 Bước 1: Encode từng phần đường dẫn
```plaintext
concat(
  '/_api/web/GetFolderByServerRelativeUrl(''',
  uriComponent('Shared Documents/日本語/レポート 2024'),
  ''')?$expand=Folders,Files'
)
```

> 🧠 `uriComponent()` sẽ giúp encode đúng theo chuẩn URI SharePoint cần.

---

### 🔹 Bước 2: Dùng biểu thức trên trong field "Uri" của `Send an HTTP request to SharePoint`

- HTTP method: `GET`
- Uri: dùng biểu thức trên (bấm vào **fx** để viết công thức)
- Headers: thêm nếu cần:
  ```json
  {
    "Accept": "application/json;odata=verbose"
  }
  ```

---

## ✅ Giải pháp 2: Tách từng phần rồi encode

Nếu bạn có đường dẫn như biến:  
`/Shared Documents/日本語/レポート 2024`

### Bạn có thể:

1. Dùng `split()` để chia các phần theo `/`
2. Encode từng phần bằng `uriComponent()`
3. Nối lại bằng `%2F`

🔧 Biểu thức mẫu:
```plaintext
concat(
  '/_api/web/GetFolderByServerRelativeUrl(''',
  join(apply(uriComponent, skip(split(variables('InputPath'), '/'), 1)), '%2F'),
  ''')?$expand=Folders,Files'
)
```

📌 Ghi chú:
- `skip(..., 1)` để loại bỏ dấu `/` ở đầu.
- `apply(uriComponent, ...)` dùng để encode từng phần.
- `join(..., '%2F')` thay vì `/` để tránh bị lỗi khi ghép lại.

---

## ✅ Nếu vẫn lỗi: hãy kiểm tra thêm

- **Không dùng dấu `'` đơn hoặc `" "` thừa trong URL**
- Đảm bảo URL không chứa **space hoặc `#`, `?` mà chưa được encode**
- Test URL encode ở ngoài (VD: [https://www.urlencoder.io/](https://www.urlencoder.io/)) để đối chiếu

---

Nếu bạn chia sẻ chuỗi URL cụ thể bạn đang dùng (gồm các thư mục có tiếng Nhật), mình có thể viết sẵn biểu thức hoàn chỉnh để bạn copy vào Power Automate nhé!
====
Để **remove dấu `/` ở đầu chuỗi đường dẫn** trong Power Automate, bạn có thể dùng biểu thức sau trong action `Set variable` hoặc `Compose`:

---

### ✅ **Biểu thức loại bỏ dấu `/` ở đầu chuỗi (nếu có):**

```plaintext
if(startsWith(variables('InputPath'), '/'), substring(variables('InputPath'), 1), variables('InputPath'))
```

---

### 🧠 Giải thích:

| Thành phần | Ý nghĩa |
|------------|--------|
| `startsWith(..., '/')` | Kiểm tra nếu chuỗi bắt đầu bằng dấu `/` |
| `substring(..., 1)` | Cắt bỏ ký tự đầu tiên (bắt đầu từ index 1) |
| `if(...)` | Nếu có dấu `/` thì bỏ, còn không thì giữ nguyên |

---

### 📌 Ví dụ:

| `InputPath` (giá trị gốc)         | Kết quả sau xử lý                    |
|-----------------------------------|--------------------------------------|
| `/Shared Documents/Reports`      | `Shared Documents/Reports`          |
| `Shared Documents/Reports`       | `Shared Documents/Reports` *(không đổi)* |

---

### ✅ Nếu dùng trong Compose:

```plaintext
if(startsWith(outputs('Compose_InputPath'), '/'), substring(outputs('Compose_InputPath'), 1), outputs('Compose_InputPath'))
```

---

Cần mình hỗ trợ đưa vào flow cụ thể nào bạn đang dùng cũng được nhé!
===================
Cảm ơn bạn đã chia sẻ chi tiết – mình hiểu vấn đề bạn gặp phải: **khi truy cập `Files` hoặc `Folders` từ kết quả trả về của `Send an HTTP request to SharePoint`, giá trị luôn bị `null` trong action `Condition` hoặc vòng lặp**, dù bạn chắc chắn API trả về đúng.

---

## 🎯 Vấn đề thực sự là gì?

SharePoint REST API khi gọi qua `Send an HTTP request to SharePoint` **không tự động trả về cấu trúc JSON gọn gàng như `Files` hoặc `Folders` mà bạn có thể truy cập trực tiếp**. Thay vào đó, **dữ liệu thường nằm trong phần `d/results`**, hoặc bạn cần `Parse JSON` để tách chính xác.

---

## ✅ Giải pháp từng bước để truy cập `Files` / `Folders` chính xác:

---

### 🔹 **Bước 1: Gọi API đúng**

```http
/_api/web/GetFolderByServerRelativeUrl('/sites/TestSite/Shared Documents/Reports')?$expand=Folders,Files
```

---

### 🔹 **Bước 2: Thêm action `Parse JSON` để tách dữ liệu chuẩn**

1. **Action**: `Parse JSON`
2. **Content**: Body của kết quả HTTP trả về.
3. **Schema**: Nếu không chắc schema, bạn có thể:
   - Chạy flow 1 lần.
   - Copy output mẫu của `Send an HTTP request to SharePoint`.
   - Dán vào “Generate from sample” trong Parse JSON để tạo schema.

> ⚠️ Quan trọng: Schema phải chứa các mảng `Files` và `Folders`.

---

### 🔹 **Bước 3: Truy cập `Files` / `Folders` một cách an toàn**

Giả sử bạn đã parse được JSON rồi, thì:

- Để duyệt `Files`: dùng `coalesce(body('Parse_JSON')?['Files'], [])`
- Để duyệt `Folders`: dùng `coalesce(body('Parse_JSON')?['Folders'], [])`

### ✅ Giải thích:

| Hàm | Ý nghĩa |
|-----|--------|
| `coalesce(x, [])` | Nếu `x` là `null`, sẽ thay thế bằng mảng rỗng `[]`, tránh lỗi |

---

### 🔹 **Bước 4: Ví dụ điều kiện kiểm tra tên file (trong Apply to each Files)**

Giả sử bạn đang trong vòng lặp `Apply to each` cho `Files`:

```plaintext
item()?['Name'] ends with '.pdf'
```

Hoặc kiểm tra path:

```plaintext
item()?['ServerRelativeUrl']
```

---

### 🧪 Nếu bạn vẫn gặp lỗi: Hãy debug bằng `Compose`

Thêm action `Compose` và set content là:

```plaintext
body('Send_an_HTTP_request_to_SharePoint')
```

Kiểm tra xem `Files` và `Folders` nằm ở đâu? Có thể chúng nằm lồng sâu như:

```json
{
  "d": {
    "Files": { "results": [...] },
    "Folders": { "results": [...] }
  }
}
```

Khi đó, bạn cần truy cập:

```plaintext
body('Send_an_HTTP_request_to_SharePoint')?['d']?['Files']?['results']
```

---

## ✅ Tổng kết cách làm chuẩn:

| Bước | Hành động |
|------|-----------|
| 1    | Gọi đúng API `/GetFolderByServerRelativeUrl(...)?$expand=Folders,Files` |
| 2    | Dùng `Parse JSON` hoặc truy cập `body()?['d']?['Files']?['results']` nếu dữ liệu bị lồng |
| 3    | Dùng `coalesce()` để xử lý null |
| 4    | Truy cập từng item trong vòng lặp qua `item()?['Name']`, `item()?['ServerRelativeUrl']` |

---

Nếu bạn muốn, mình có thể giúp bạn **xây sẵn 1 mẫu flow JSON mẫu + điều kiện kiểm tra file** để bạn paste vào nhanh. Bạn có dùng action `"Send an HTTP request to SharePoint"` theo chuẩn v2 không? Và bạn đang gặp lỗi cụ thể trong action nào?
===============
Hoàn toàn được! Nếu bạn muốn **kiểm tra ngay sau `Parse JSON`** xem phần `Files` hoặc `Folders` có phải là `null` hay không, mình sẽ hướng dẫn chi tiết theo cách dùng `Condition` trong Power Automate chuẩn nhất.

---

## ✅ Mục tiêu:  
Kiểm tra xem `Files` hoặc `Folders` **có tồn tại không**, sau `Parse JSON`.

---

## 🔧 **Cách làm:**

### ➤ Giả sử bạn có một action `Parse JSON` tên là `Parse_JSON`.

---

### ✅ **Bước 1: Thêm Action "Condition"**

**Kiểm tra `Files` có khác null không:**

**Condition:**
```plaintext
not(equals(variables('ParsedFiles'), null))
```

Nhưng nếu bạn **không dùng biến**, thì hãy dùng trực tiếp:

```plaintext
not(equals(body('Parse_JSON')?['Files'], null))
```

Tương tự cho `Folders`:

```plaintext
not(equals(body('Parse_JSON')?['Folders'], null))
```

---

### ✅ **Bước 2: Nếu bạn muốn kiểm tra rỗng hoặc null luôn:**

```plaintext
length(coalesce(body('Parse_JSON')?['Files'], [])) > 0
```

Cách này đảm bảo:
- Nếu `Files` là `null` → biến thành `[]` → `length = 0`
- Nếu có file nào → `length > 0`

---

## 📌 **Tóm tắt các công thức**

| Mục tiêu                            | Biểu thức dùng trong Condition                          |
|-------------------------------------|----------------------------------------------------------|
| Kiểm tra `Files` có khác `null`     | `not(equals(body('Parse_JSON')?['Files'], null))`       |
| Kiểm tra `Files` có ít nhất 1 item  | `length(coalesce(body('Parse_JSON')?['Files'], [])) > 0`|
| Kiểm tra `Folders` là null          | `equals(body('Parse_JSON')?['Folders'], null)`          |
| Kiểm tra `Folders` không rỗng       | `length(coalesce(body('Parse_JSON')?['Folders'], [])) > 0` |

---

## 📌 Gợi ý debug:
Nếu không chắc dữ liệu có đúng không, bạn có thể thêm một `Compose` để kiểm tra:

```plaintext
body('Parse_JSON')?['Files']
```

Xem trong run history để biết chính xác kiểu dữ liệu đang về là gì (null, [] hay có mảng).

---

Nếu bạn muốn, mình có thể giúp bạn tạo nhanh 1 đoạn flow mẫu với các điều kiện này. Bạn dùng bản Cloud Flow đúng không?
