D∆∞·ªõi ƒë√¢y l√† phi√™n b·∫£n c·∫≠p nh·∫≠t c·ªßa code VBA ƒë·ªÉ x√≥a d·ªØ li·ªáu t·ª´ d√≤ng ngay sau header (h√†ng ƒë·∫ßu ti√™n c·ªßa b·∫£ng) m√† kh√¥ng l√†m ·∫£nh h∆∞·ªüng ƒë·∫øn ti√™u ƒë·ªÅ:

```vba
Public Function CopyPasteWithParameters(ByVal sourceFilePath As String, ByVal targetFilePath As String, ByVal columnsToCopy As String) As String
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim targetSheet As Worksheet
    Dim sourceColumns() As String
    Dim targetCol As Integer
    Dim lastRow As Long
    Dim sourceData As Variant
    Dim i As Integer
    Dim targetTable As ListObject

    On Error GoTo ErrorHandler

    ' M·ªü file g·ªëc v√† file ƒë√≠ch t·ª´ ƒë∆∞·ªùng d·∫´n ƒë∆∞·ª£c truy·ªÅn v√†o
    Set sourceWorkbook = Workbooks.Open(sourceFilePath)
    Set targetWorkbook = Workbooks.Open(targetFilePath)
    
    ' L·∫•y sheet ƒë·∫ßu ti√™n t·ª´ file g·ªëc v√† sheet th·ª© hai t·ª´ file ƒë√≠ch
    Set sourceSheet = sourceWorkbook.Sheets(1)
    Set targetSheet = targetWorkbook.Sheets(2)

    ' Chuy·ªÉn c√°c t√™n c·ªôt t·ª´ chu·ªói th√†nh m·∫£ng
    sourceColumns = Split(columnsToCopy, ",")

    ' X√°c ƒë·ªãnh b·∫£ng trong sheet ƒë√≠ch
    If targetSheet.ListObjects.Count > 0 Then
        Set targetTable = targetSheet.ListObjects(1) ' Gi·∫£ ƒë·ªãnh ch·ªâ c√≥ m·ªôt b·∫£ng
        ' X√≥a to√†n b·ªô d·ªØ li·ªáu t·ª´ d√≤ng sau header
        If Not targetTable.DataBodyRange Is Nothing Then
            targetTable.DataBodyRange.ClearContents
        End If
    Else
        CopyPasteWithParameters = "L·ªói: Kh√¥ng t√¨m th·∫•y b·∫£ng trong sheet ƒë√≠ch."
        GoTo CleanUp
    End If

    ' Ki·ªÉm tra xem h√†ng th·ª© 2 trong sheet ƒë√≠ch c√≥ d·ªØ li·ªáu kh√¥ng
    If Application.CountA(targetSheet.Rows(2)) = 0 Then
        CopyPasteWithParameters = "L·ªói: H√†ng th·ª© 2 trong sheet ƒë√≠ch kh√¥ng c√≥ d·ªØ li·ªáu. Vui l√≤ng ki·ªÉm tra."
        GoTo CleanUp
    End If

    ' Duy·ªát qua c√°c c·ªôt ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
    For i = LBound(sourceColumns) To UBound(sourceColumns)
        ' T√¨m c·ªôt ƒë√≠ch c√≥ t√™n gi·ªëng nhau trong h√†ng th·ª© 2 c·ªßa sheet ƒë√≠ch
        On Error Resume Next
        targetCol = 0
        targetCol = Application.Match(sourceColumns(i), targetSheet.Rows(2), 0)
        On Error GoTo 0

        If targetCol > 0 Then
            ' X√°c ƒë·ªãnh s·ªë h√†ng cu·ªëi c√πng trong c·ªôt ngu·ªìn
            lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0)).End(xlUp).Row

            ' Ki·ªÉm tra n·∫øu c·ªôt ngu·ªìn kh√¥ng c√≥ d·ªØ li·ªáu
            If lastRow < 2 Then
                CopyPasteWithParameters = "L·ªói: Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu trong c·ªôt " & sourceColumns(i) & " c·ªßa file g·ªëc."
                GoTo CleanUp
            End If

            ' Sao ch√©p d·ªØ li·ªáu v√†o m·∫£ng
            sourceData = sourceSheet.Range(sourceSheet.Cells(2, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0)), _
                                           sourceSheet.Cells(lastRow, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0))).Value

            ' D√°n d·ªØ li·ªáu v√†o c·ªôt ƒë√≠ch, b·∫Øt ƒë·∫ßu t·ª´ h√†ng th·ª© 5
            targetSheet.Range(targetSheet.Cells(5, targetCol), targetSheet.Cells(UBound(sourceData, 1) + 4, targetCol)).Value = sourceData
        Else
            CopyPasteWithParameters = "L·ªói: Kh√¥ng t√¨m th·∫•y c·ªôt ƒë√≠ch cho " & sourceColumns(i) & " trong file ƒë√≠ch."
            GoTo CleanUp
        End If
    Next i

    ' L∆∞u v√† ƒë√≥ng file
    targetWorkbook.Save
    sourceWorkbook.Close False
    targetWorkbook.Close True

    CopyPasteWithParameters = "Th√†nh c√¥ng: D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c sao ch√©p v√† d√°n th√†nh c√¥ng."
    Exit Function

ErrorHandler:
    CopyPasteWithParameters = "L·ªói: ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh th·ª±c thi: " & Err.Description

CleanUp:
    ' ƒê√≥ng file n·∫øu c·∫ßn thi·∫øt
    If Not sourceWorkbook Is Nothing Then sourceWorkbook.Close False
    If Not targetWorkbook Is Nothing Then targetWorkbook.Close True
End Function
```

### C·∫≠p nh·∫≠t m·ªõi:
1. **X√≥a d·ªØ li·ªáu sau header**:
   - S·ª≠ d·ª•ng `ClearContents` ƒë·ªÉ x√≥a to√†n b·ªô d·ªØ li·ªáu trong b·∫£ng, gi·ªØ nguy√™n header.
   - Ki·ªÉm tra `DataBodyRange` ƒë·ªÉ ƒë·∫£m b·∫£o r·∫±ng b·∫£ng c√≥ d·ªØ li·ªáu tr∆∞·ªõc khi th·ª±c hi·ªán l·ªánh x√≥a.

2. **B·∫£o v·ªá ti√™u ƒë·ªÅ**:
   - ƒêo·∫°n code s·∫Ω kh√¥ng x√≥a d√≤ng header c·ªßa b·∫£ng, ƒë·∫£m b·∫£o c·∫•u tr√∫c b·∫£ng v·∫´n ƒë∆∞·ª£c gi·ªØ nguy√™n.

### H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:
1. **Chu·∫©n b·ªã file VBA**:
   - L∆∞u code n√†y th√†nh file `.bas`.
   - Import file `.bas` v√†o file Excel th√¥ng qua VBA Editor (Alt + F11 > File > Import).

2. **T√≠ch h·ª£p v·ªõi UiPath**:
   - S·ª≠ d·ª•ng **Excel Application Scope** ƒë·ªÉ m·ªü file Excel c√≥ macro.
   - G·ªçi h√†m `CopyPasteWithParameters` th√¥ng qua **Invoke VBA**.
   - Truy·ªÅn c√°c tham s·ªë:
     - `sourceFilePath`: ƒê∆∞·ªùng d·∫´n file g·ªëc (VD: `"C:\DuongDan\FileGoc.xlsx"`).
     - `targetFilePath`: ƒê∆∞·ªùng d·∫´n file ƒë√≠ch (VD: `"C:\DuongDan\FileDich.xlsx"`).
     - `columnsToCopy`: Danh s√°ch t√™n c·ªôt (VD: `"Column1,Column2,Column3"`).

N·∫øu b·∫°n c·∫ßn th√™m ch·ªânh s·ª≠a ho·∫∑c h·ªó tr·ª£, c·ª© n√≥i nh√©! üòä
=======================================================================================================
D∆∞·ªõi ƒë√¢y l√† phi√™n b·∫£n c·∫≠p nh·∫≠t c·ªßa m√£ VBA, trong ƒë√≥ b·∫°n c√≥ th·ªÉ ch·ªâ ƒë·ªãnh m·ªôt v·ªã tr√≠ d√≤ng b·∫Øt ƒë·∫ßu (`row n`) v√† t·∫•t c·∫£ d·ªØ li·ªáu t·ª´ d√≤ng ƒë√≥ tr·ªü ƒëi s·∫Ω b·ªã x√≥a:

```vba
Public Function CopyPasteWithParameters(ByVal sourceFilePath As String, ByVal targetFilePath As String, ByVal columnsToCopy As String, ByVal startRow As Long) As String
    Dim sourceWorkbook As Workbook
    Dim targetWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim targetSheet As Worksheet
    Dim sourceColumns() As String
    Dim targetCol As Integer
    Dim lastRow As Long
    Dim sourceData As Variant
    Dim i As Integer

    On Error GoTo ErrorHandler

    ' M·ªü file g·ªëc v√† file ƒë√≠ch t·ª´ ƒë∆∞·ªùng d·∫´n ƒë∆∞·ª£c truy·ªÅn v√†o
    Set sourceWorkbook = Workbooks.Open(sourceFilePath)
    Set targetWorkbook = Workbooks.Open(targetFilePath)
    
    ' L·∫•y sheet ƒë·∫ßu ti√™n t·ª´ file g·ªëc v√† sheet th·ª© hai t·ª´ file ƒë√≠ch
    Set sourceSheet = sourceWorkbook.Sheets(1)
    Set targetSheet = targetWorkbook.Sheets(2)

    ' Chuy·ªÉn c√°c t√™n c·ªôt t·ª´ chu·ªói th√†nh m·∫£ng
    sourceColumns = Split(columnsToCopy, ",")

    ' X√≥a d·ªØ li·ªáu t·ª´ d√≤ng startRow tr·ªü ƒëi trong sheet ƒë√≠ch
    If startRow > 0 And startRow <= targetSheet.Rows.Count Then
        On Error Resume Next
        targetSheet.Rows(startRow & ":" & targetSheet.Rows.Count).ClearContents
        On Error GoTo 0
    Else
        CopyPasteWithParameters = "L·ªói: V·ªã tr√≠ d√≤ng b·∫Øt ƒë·∫ßu (startRow) kh√¥ng h·ª£p l·ªá."
        GoTo CleanUp
    End If

    ' Ki·ªÉm tra xem h√†ng th·ª© 2 trong sheet ƒë√≠ch c√≥ d·ªØ li·ªáu kh√¥ng
    If Application.CountA(targetSheet.Rows(2)) = 0 Then
        CopyPasteWithParameters = "L·ªói: H√†ng th·ª© 2 trong sheet ƒë√≠ch kh√¥ng c√≥ d·ªØ li·ªáu. Vui l√≤ng ki·ªÉm tra."
        GoTo CleanUp
    End If

    ' Duy·ªát qua c√°c c·ªôt ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
    For i = LBound(sourceColumns) To UBound(sourceColumns)
        ' T√¨m c·ªôt ƒë√≠ch c√≥ t√™n gi·ªëng nhau trong h√†ng th·ª© 2 c·ªßa sheet ƒë√≠ch
        On Error Resume Next
        targetCol = 0
        targetCol = Application.Match(sourceColumns(i), targetSheet.Rows(2), 0)
        On Error GoTo 0

        If targetCol > 0 Then
            ' X√°c ƒë·ªãnh s·ªë h√†ng cu·ªëi c√πng trong c·ªôt ngu·ªìn
            lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0)).End(xlUp).Row

            ' Ki·ªÉm tra n·∫øu c·ªôt ngu·ªìn kh√¥ng c√≥ d·ªØ li·ªáu
            If lastRow < 2 Then
                CopyPasteWithParameters = "L·ªói: Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu trong c·ªôt " & sourceColumns(i) & " c·ªßa file g·ªëc."
                GoTo CleanUp
            End If

            ' Sao ch√©p d·ªØ li·ªáu v√†o m·∫£ng
            sourceData = sourceSheet.Range(sourceSheet.Cells(2, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0)), _
                                           sourceSheet.Cells(lastRow, Application.Match(sourceColumns(i), sourceSheet.Rows(1), 0))).Value

            ' D√°n d·ªØ li·ªáu v√†o c·ªôt ƒë√≠ch, b·∫Øt ƒë·∫ßu t·ª´ h√†ng th·ª© 5
            targetSheet.Range(targetSheet.Cells(5, targetCol), targetSheet.Cells(UBound(sourceData, 1) + 4, targetCol)).Value = sourceData
        Else
            CopyPasteWithParameters = "L·ªói: Kh√¥ng t√¨m th·∫•y c·ªôt ƒë√≠ch cho " & sourceColumns(i) & " trong file ƒë√≠ch."
            GoTo CleanUp
        End If
    Next i

    ' L∆∞u v√† ƒë√≥ng file
    targetWorkbook.Save
    sourceWorkbook.Close False
    targetWorkbook.Close True

    CopyPasteWithParameters = "Th√†nh c√¥ng: D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c sao ch√©p v√† d√°n th√†nh c√¥ng."
    Exit Function

ErrorHandler:
    CopyPasteWithParameters = "L·ªói: ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh th·ª±c thi: " & Err.Description

CleanUp:
    ' ƒê√≥ng file n·∫øu c·∫ßn thi·∫øt
    If Not sourceWorkbook Is Nothing Then sourceWorkbook.Close False
    If Not targetWorkbook Is Nothing Then targetWorkbook.Close True
End Function
```

### Nh·ªØng c·∫≠p nh·∫≠t ch√≠nh:
1. **X√≥a d·ªØ li·ªáu t·ª´ m·ªôt d√≤ng c·ª• th·ªÉ (`startRow`)**:
   - S·ª≠ d·ª•ng tham s·ªë `startRow` ƒë·ªÉ ch·ªâ ƒë·ªãnh d√≤ng b·∫Øt ƒë·∫ßu x√≥a d·ªØ li·ªáu trong sheet ƒë√≠ch.
   - T·∫•t c·∫£ d·ªØ li·ªáu t·ª´ d√≤ng `startRow` ƒë·∫øn cu·ªëi s·∫Ω b·ªã x√≥a b·∫±ng c√°ch s·ª≠ d·ª•ng `ClearContents`.

2. **Ki·ªÉm tra h·ª£p l·ªá c·ªßa `startRow`**:
   - ƒê·∫£m b·∫£o `startRow` n·∫±m trong ph·∫°m vi h·ª£p l·ªá c·ªßa sheet (l·ªõn h∆°n 0 v√† nh·ªè h∆°n ho·∫∑c b·∫±ng t·ªïng s·ªë h√†ng).

3. **Th√™m tham s·ªë `startRow`**:
   - Ng∆∞·ªùi d√πng c√≥ th·ªÉ truy·ªÅn tham s·ªë n√†y t·ª´ UiPath ƒë·ªÉ x√°c ƒë·ªãnh d√≤ng b·∫Øt ƒë·∫ßu x√≥a.

### H∆∞·ªõng d·∫´n t√≠ch h·ª£p v·ªõi UiPath:
1. **Chu·∫©n b·ªã file VBA**:
   - L∆∞u ƒëo·∫°n code n√†y th√†nh file `.bas`.
   - Import file `.bas` v√†o file Excel th√¥ng qua VBA Editor (Alt + F11 > File > Import).

2. **C·∫•u h√¨nh trong UiPath**:
   - D√πng activity **Invoke VBA** ƒë·ªÉ g·ªçi h√†m `CopyPasteWithParameters`.
   - Truy·ªÅn c√°c tham s·ªë:
     - `sourceFilePath`: ƒê∆∞·ªùng d·∫´n ƒë·∫øn file g·ªëc (VD: `"C:\DuongDan\FileGoc.xlsx"`).
     - `targetFilePath`: ƒê∆∞·ªùng d·∫´n ƒë·∫øn file ƒë√≠ch (VD: `"C:\DuongDan\FileDich.xlsx"`).
     - `columnsToCopy`: Danh s√°ch t√™n c·ªôt c·∫ßn sao ch√©p (VD: `"Column1,Column2,Column3"`).
     - `startRow`: D√≤ng b·∫Øt ƒë·∫ßu x√≥a d·ªØ li·ªáu (VD: `5`).

3. **X·ª≠ l√Ω k·∫øt qu·∫£ tr·∫£ v·ªÅ**:
   - K·∫øt qu·∫£ tr·∫£ v·ªÅ s·∫Ω l√† chu·ªói tr·∫°ng th√°i (th√†nh c√¥ng ho·∫∑c l·ªói) ƒë·ªÉ b·∫°n x·ª≠ l√Ω th√™m trong UiPath.

H√£y th·ª≠ nghi·ªám v√† cho t√¥i bi·∫øt n·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ th√™m nh√©! üòä
