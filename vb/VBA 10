C·∫£m ∆°n b·∫°n ƒë√£ ph·∫£n h·ªìi! Khi `.bas` kh√¥ng th·ªÉ **run trong UiPath**, c√≥ th·ªÉ do m·ªôt s·ªë nguy√™n nh√¢n k·ªπ thu·∫≠t. M√¨nh s·∫Ω h∆∞·ªõng d·∫´n b·∫°n **step-by-step ki·ªÉm tra v√† s·ª≠a l·ªói** ƒë·ªÉ ƒë·∫£m b·∫£o `Invoke VBA` ch·∫°y ƒë∆∞·ª£c macro t·ª´ file `.bas`.

---

## ‚úÖ Check nhanh tr∆∞·ªõc:

### üîπ 1. **File Excel b·∫°n m·ªü b·∫±ng `Excel Application Scope` c√≥ ƒë∆∞·ª£c l∆∞u?**
- File Excel **ph·∫£i c√≥ ƒëu√¥i `.xlsm`**
- Ph·∫£i **ƒë√£ ƒë∆∞·ª£c l∆∞u th·ªß c√¥ng m·ªôt l·∫ßn tr∆∞·ªõc** ƒë·ªÉ ch·ª©a macro

> üîß N·∫øu b·∫°n m·ªõi t·∫°o file Excel t·ª´ UiPath, h√£y m·ªü b·∫±ng tay, l∆∞u l·∫°i m·ªôt l·∫ßn, r·ªìi ch·∫°y l·∫°i Flow.

---

### üîπ 2. **Ki·ªÉm tra c·∫•u tr√∫c UiPath**

| Step | Activity | Ghi ch√∫ |
|------|----------|---------|
| 1 | **Excel Application Scope** | Tr·ªè ƒë·∫øn file `.xlsm` ƒë√£ c√≥ macro |
| 2 | **Invoke VBA** | Import file `.bas` v√† g·ªçi macro |

### C·∫•u h√¨nh c·ªßa **Invoke VBA**:

- **Code File Path**: ƒë∆∞·ªùng d·∫´n t·ªõi file `GetAllSharePointFiles.bas`
- **EntryMethodName**: `GetAllSharePointFiles`
- **IsFromFile**: `True`
- **Input Parameters**: ƒë·ªÉ tr·ªëng n·∫øu macro kh√¥ng c·∫ßn argument

---

### üîπ 3. **Excel b·∫≠t ch·∫ø ƒë·ªô "Enable Macros" ch∆∞a?**

M·ªü file `.xlsm` b·∫±ng tay 1 l·∫ßn ‚Üí ch·ªçn **"Enable Content"** n·∫øu c√≥ c·∫£nh b√°o.

---

## ‚úÖ Ki·ªÉm tra l·ªói th∆∞·ªùng g·∫∑p

| L·ªói | Nguy√™n nh√¢n |
|-----|-------------|
| Macro not found | T√™n h√†m sai, ho·∫∑c `.bas` ch∆∞a ƒë∆∞·ª£c import ƒë√∫ng |
| Cannot run macro | File kh√¥ng l∆∞u, ho·∫∑c kh√¥ng ph·∫£i `.xlsm` |
| Object variable not set | Bi·∫øn ch∆∞a khai b√°o ho·∫∑c Excel ch∆∞a s·∫µn s√†ng |
| Excel l·ªói vƒÉng | File ƒëang m·ªü t·ª´ l·∫ßn tr∆∞·ªõc ch∆∞a ƒë∆∞·ª£c ƒë√≥ng ƒë√∫ng |

---

## ‚úÖ Ki·ªÉm tra ch√≠nh x√°c: B·∫°n c√≥ th·ªÉ th·ª≠ b·∫±ng tay trong Excel

1. M·ªü file `.xlsm`
2. M·ªü tab **Developer > Macros**
3. Xem macro `GetAllSharePointFiles` c√≥ xu·∫•t hi·ªán kh√¥ng
4. Nh·∫•n **Run** ‚Üí ki·ªÉm tra k·∫øt qu·∫£

---

## ‚úÖ T·ªëi ∆∞u l·∫°i: M√¨nh g·ª≠i b·∫°n phi√™n b·∫£n `.bas` ƒë√£ s·ª≠a g·ªçn cho ch·∫°y t·ªët t·ª´ UiPath:

### üß© ƒê·∫£m b·∫£o ƒë·ªãnh d·∫°ng:

```vb
Attribute VB_Name = "GetAllSharePointFiles"
Option Explicit

Public Sub GetAllSharePointFiles()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets(1)

    ws.Cells.ClearContents
    ws.Range("A1:B1").Value = Array("T√™n File", "ƒê∆∞·ªùng D·∫´n")

    Dim nextRow As Long
    nextRow = 2

    ' ƒê·ªïi ƒë∆∞·ªùng d·∫´n cho ƒë√∫ng site c·ªßa b·∫°n
    Dim url As String
    url = "https://contoso.sharepoint.com/sites/TestSite/Shared Documents"

    ' G·ªçi x·ª≠ l√Ω
    ProcessFolder url, ws, nextRow
End Sub

Private Sub ProcessFolder(folderUrl As String, ws As Worksheet, ByRef rowIdx As Long)
    Dim http As Object
    Set http = CreateObject("MSXML2.XMLHTTP")
    http.Open "GET", folderUrl, False
    http.setRequestHeader "Accept", "application/json;odata=verbose"
    http.Send

    If http.Status = 200 Then
        Dim json As Object
        Set json = ParseJson(http.responseText)

        Dim files
        Set files = json("d")("Files")("results")

        Dim f
        For Each f In files
            ws.Cells(rowIdx, 1).Value = f("Name")
            ws.Cells(rowIdx, 2).Value = f("ServerRelativeUrl")
            rowIdx = rowIdx + 1
        Next
    Else
        MsgBox "L·ªói g·ªçi API: " & http.Status
    End If
End Sub

' JsonConverter t·ªëi gi·∫£n d√πng ScriptControl
Private Function ParseJson(jsonText As String) As Object
    Dim sc As Object
    Set sc = CreateObject("ScriptControl")
    sc.Language = "JScript"
    Set ParseJson = sc.Eval("(" & jsonText & ")")
End Function
```

---

## üí° G·ª£i √Ω: Debug trong Excel tr∆∞·ªõc, sau ƒë√≥ g·ªçi t·ª´ UiPath

- G·ª° l·ªói d·ªÖ h∆°n
- Sau khi ch·∫Øc ch·∫Øn ch·∫°y ƒë∆∞·ª£c t·ª´ Excel, h√£y chuy·ªÉn sang UiPath

---

N·∫øu b·∫°n c·∫ßn, m√¨nh c√≥ th·ªÉ g·ª≠i file `.bas` ƒë√∫ng ƒë·ªãnh d·∫°ng ƒë·ªÉ b·∫°n import tr·ª±c ti·∫øp. Ho·∫∑c b·∫°n c√≥ th·ªÉ g·ª≠i ·∫£nh l·ªói c·ª• th·ªÉ khi ch·∫°y trong UiPath ƒë·ªÉ m√¨nh fix chu·∫©n lu√¥n nh√©!
