C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i JSON m·∫´u! D∆∞·ªõi ƒë√¢y l√† **c√°ch x·ª≠ l√Ω JSON ƒë√≥ trong UiPath** b·∫±ng `Deserialize JSON` v√† `For Each`, ƒë·ªÉ **l·∫•y ra t·ª´ng file t·ª´ c·∫£ `"files"` v√† `"subfolder"`**.

---

### üß© **C·∫•u tr√∫c JSON**
```json
{
  "files": [ {...}, {...} ],
  "subfolder": [ {...}, {...} ]
}
```

B·∫°n c√≥ 2 m·∫£ng (`files` v√† `subfolder`), m·ªói m·∫£ng ch·ª©a nhi·ªÅu object c√≥ `name` v√† `path`.

---

### ‚úÖ **C√°ch x·ª≠ l√Ω trong UiPath**

#### 1. **Deserialize JSON**
- S·ª≠ d·ª•ng activity `Deserialize JSON`
- Input: bi·∫øn chu·ªói JSON (v√≠ d·ª• `jsonString`)
- Output: bi·∫øn `jsonObj` (ki·ªÉu `JObject`)

#### 2. **Duy·ªát qua `"files"`**

```vb
For Each fileItem In jsonObj("files")
    name = fileItem("name").ToString
    path = fileItem("path").ToString
    Log Message: "File: " + name + " | Path: " + path
Next
```

#### 3. **Duy·ªát qua `"subfolder"`**

```vb
For Each subItem In jsonObj("subfolder")
    name = subItem("name").ToString
    path = subItem("path").ToString
    Log Message: "Subfolder File: " + name + " | Path: " + path
Next
```

---

### üí° **To√†n b·ªô logic**

```vb
jsonObj = DeserializeJson(jsonString)

' Duy·ªát files
For Each fileItem In jsonObj("files")
    Log Message: "File: " + fileItem("name").ToString + " - " + fileItem("path").ToString
Next

' Duy·ªát subfolder
For Each subItem In jsonObj("subfolder")
    Log Message: "Subfolder File: " + subItem("name").ToString + " - " + subItem("path").ToString
Next
```

---

N·∫øu b·∫°n mu·ªën **gom t·∫•t c·∫£ file t·ª´ c·∫£ hai m·∫£ng v√†o chung m·ªôt `DataTable` ho·∫∑c danh s√°ch**, m√¨nh c√≥ th·ªÉ gi√∫p t·∫°o lu√¥n ƒëo·∫°n code ƒë·∫ßy ƒë·ªß. B·∫°n c·∫ßn ki·ªÉu d·ªØ li·ªáu n√†o ƒë·ªÉ xu·∫•t ra sau c√πng? `DataTable`, `List(of String)`, hay ghi v√†o Excel?
