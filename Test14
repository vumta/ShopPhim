R·∫•t tuy·ªát v√¨ b·∫°n ƒë√£ th·ª≠ nghi·ªám th·ª±c t·∫ø v·ªõi d·ªØ li·ªáu l·ªõn (90,000 d√≤ng). V·ªõi s·ªë l∆∞·ª£ng d√≤ng l·ªõn th·∫ø n√†y, vi·ªác x·ª≠ l√Ω d·ªØ li·ªáu trong **Office Script + Power Automate** c·∫ßn ƒë∆∞·ª£c **t·ªëi ∆∞u c·∫©n th·∫≠n** v√¨:

- **Office Script c√≥ gi·ªõi h·∫°n timeout** (t·∫ßm 5 ph√∫t)
- `getRangeByIndexes(...).getValues()` v√† `setValues()` qu√° nhi·ªÅu d√≤ng c√≥ th·ªÉ ch·∫≠m
- Power Automate nhi·ªÅu l·∫ßn g·ªçi `Run script` c≈©ng t·ªën th·ªùi gian

---

## üß† Chi·∫øn l∆∞·ª£c t·ªëi ∆∞u hi·ªáu qu·∫£

### ‚úÖ 1. Gom d·ªØ li·ªáu nhi·ªÅu c·ªôt ‚Üí d√°n c√πng l√∫c (n·∫øu ƒë∆∞·ª£c)

Thay v√¨ d√°n t·ª´ng c·ªôt m·ªôt:
```ts
RunScript ‚Üí d√°n "Ph√≤ng ban"  
RunScript ‚Üí d√°n "T√™n"  
RunScript ‚Üí d√°n "V·ªã tr√≠"
```
B·∫°n gom t·∫•t c·∫£ th√†nh:

```ts
{
  "columns": [
    {
      "columnName": "Ph√≤ng ban",
      "values": [["IT"], ["HR"], ["Finance"]]
    },
    {
      "columnName": "T√™n",
      "values": [["Nam"], ["Lan"], ["H√πng"]]
    }
  ]
}
```

‚úÖ **D√°n 1 l·∫ßn nhi·ªÅu c·ªôt s·∫Ω c·ª±c k·ª≥ nhanh h∆°n.**

---

### ‚úÖ 2. H·∫°n ch·∫ø `.getRange(...).getValues()` t·ªëi ƒëa

D√πng `getValues()` c√†ng √≠t c√†ng t·ªët.  
‚Üí ch·ªâ c·∫ßn load d√≤ng ti√™u ƒë·ªÅ (`row 2`) v√† 1 c·ªôt duy nh·∫•t ƒë·ªÉ x√°c ƒë·ªãnh d√≤ng cu·ªëi

---

### ‚úÖ 3. D√πng `setValues()` 1 l·∫ßn duy nh·∫•t

C√†ng √≠t l·ªánh `.setValues()`, c√†ng nhanh.

---

## ‚úÖ Office Script T·ªëi ∆∞u H√≥a ‚Äî D√°n nhi·ªÅu c·ªôt c√πng l√∫c

```ts
function main(workbook: ExcelScript.Workbook, input: PasteInput): void {
  const sheet = workbook.getActiveWorksheet();

  // 1. ƒê·ªçc d√≤ng ti√™u ƒë·ªÅ (row 2)
  const maxCols = 100;
  const headerRow = sheet.getRangeByIndexes(1, 0, 1, maxCols).getValues()[0];
  let colMap: Record<string, number> = {};
  for (let i = 0; i < headerRow.length; i++) {
    const header = headerRow[i]?.toString().trim();
    if (header) colMap[header] = i;
  }

  // 2. X√°c ƒë·ªãnh t·∫•t c·∫£ c·ªôt c·∫ßn ch√®n
  const columnsToPaste = input.columns.filter(c => colMap[c.columnName] !== undefined);
  if (columnsToPaste.length === 0) return;

  // 3. T√¨m s·ªë d√≤ng d√†i nh·∫•t
  const maxRowCount = Math.max(...columnsToPaste.map(c => c.values.length));

  // 4. T√¨m d√≤ng cu·ªëi c√πng c√≥ d·ªØ li·ªáu (·ªü 1 c·ªôt th√¥i, v√≠ d·ª• c·ªôt ƒë·∫ßu)
  const checkColIndex = colMap[columnsToPaste[0].columnName];
  const checkRange = sheet.getRangeByIndexes(2, checkColIndex, 100000, 1).getValues();
  let lastRow = 2;
  for (let i = checkRange.length - 1; i >= 0; i--) {
    if (checkRange[i][0] !== "" && checkRange[i][0] !== null) {
      lastRow = i + 3;
      break;
    }
  }

  // 5. Chu·∫©n b·ªã m·∫£ng 2D ƒë·∫ßy ƒë·ªß
  const result: (string | number | boolean)[][] = Array.from({ length: maxRowCount }, () => Array(maxCols).fill(""));

  for (const col of columnsToPaste) {
    const colIndex = colMap[col.columnName];
    for (let i = 0; i < col.values.length; i++) {
      result[i][colIndex] = col.values[i][0];
    }
  }

  // 6. Ghi gi√° tr·ªã v√†o file
  const targetRange = sheet.getRangeByIndexes(lastRow, 0, maxRowCount, maxCols);
  targetRange.setValues(result);
}

type PasteInput = {
  columns: {
    columnName: string;
    values: string[][];
  }[];
};
```

---

## ‚úÖ Power Automate ‚Äì H∆∞·ªõng d·∫´n t·ªëi ∆∞u

### üß† T·ªïng th·ªÉ flow:

1. **List Files**
2. **Apply to Each File**
   - `Get Content`
   - `Run Script (tr√≠ch d·ªØ li·ªáu)` ‚Üí tr·∫£ v·ªÅ nhi·ªÅu c·ªôt
   - `Parse JSON`
   - ‚úÖ `Run Script (d√°n t·∫•t c·∫£ c·ªôt c√πng l√∫c)` ‚Üê d√πng script ·ªü tr√™n

---

### üìù Input cho Office Script (d√°n):

Truy·ªÅn to√†n b·ªô nh∆∞:

```json
{
  "columns": [
    {
      "columnName": "Ph√≤ng ban",
      "values": [["IT"], ["HR"], ["Finance"], ..., ["X"]]
    },
    {
      "columnName": "T√™n",
      "values": [["Nam"], ["Lan"], ["H√πng"], ..., ["Y"]]
    }
  ]
}
```

---

## ‚ö° T·ªëc ƒë·ªô th·ª±c t·∫ø c√≥ th·ªÉ ƒë·∫°t ƒë∆∞·ª£c?

- D·ªØ li·ªáu 90,000 d√≤ng, 5‚Äì10 c·ªôt: n·∫øu gom h·∫øt v√† d√°n 1 l·∫ßn ‚Üí m·∫•t t·∫ßm **10‚Äì30s**
- N·∫øu t√°ch ra t·ª´ng c·ªôt ‚Üí c√≥ th·ªÉ m·∫•t 1‚Äì2 ph√∫t cho m·ªói l·∫ßn g·ªçi script

---

## ‚úÖ K·∫øt lu·∫≠n ‚Äì Checklist T·ªëi ∆Øu

| H·∫°ng m·ª•c | T·ªëi ∆∞u |
|---------|--------|
| D√°n t·ª´ng c·ªôt | ‚ùå Ch·∫≠m |
| D√°n nhi·ªÅu c·ªôt c√πng l√∫c | ‚úÖ Nhanh |
| Nhi·ªÅu l·∫ßn `setValues()` | ‚ùå |
| Ch·ªâ 1 l·∫ßn `setValues()` | ‚úÖ |
| T√°ch script theo t·ª´ng c·ªôt | ‚ùå |
| Gom data truy·ªÅn c√πng l√∫c | ‚úÖ |
| D√πng `.getValues()` √≠t nh·∫•t | ‚úÖ |

---

M√¨nh c√≥ th·ªÉ h·ªó tr·ª£:
- Xu·∫•t flow th√†nh file `.zip` ƒë·ªÉ b·∫°n import
- T·∫°o flow m·∫´u tr√™n Power Automate Desktop (n·∫øu c·∫ßn)
- C·∫£nh b√°o l·ªói v√† x·ª≠ l√Ω t√¨nh hu·ªëng th·ª±c t·∫ø (vd. t√™n c·ªôt kh√¥ng kh·ªõp)

B·∫°n mu·ªën m√¨nh h·ªó tr·ª£ ph·∫ßn n√†o th√™m?
